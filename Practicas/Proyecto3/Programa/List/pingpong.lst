
AVRASM ver. 2.1.30  C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm Sun May 28 23:56:42 2023

C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm(1415): warning: Register r4 already defined by the .DEF directive
C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm(1416): warning: Register r5 already defined by the .DEF directive
C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm(1417): warning: Register r6 already defined by the .DEF directive
C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm(1418): warning: Register r7 already defined by the .DEF directive
C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm(1419): warning: Register r8 already defined by the .DEF directive
C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm(1420): warning: Register r9 already defined by the .DEF directive
C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm(1421): warning: Register r10 already defined by the .DEF directive
C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm(1422): warning: Register r11 already defined by the .DEF directive
C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm(1423): warning: Register r12 already defined by the .DEF directive
C:\Users\alanm\Documents\GitHub\SistemasEnChip\Practicas\Proyecto3\Programa\List\pingpong.asm(1424): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.51 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega8535
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 128 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 1
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8535
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 512
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x025F
                 	.EQU __DSTACK_SIZE=0x0080
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x20
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rand=R4
                 	.DEF _rand_msb=R5
                 	.DEF _cont1=R6
                 	.DEF _cont1_msb=R7
                 	.DEF _cont2=R8
                 	.DEF _cont2_msb=R9
                 	.DEF _puntos1=R10
                 	.DEF _puntos1_msb=R11
                 	.DEF _puntos2=R12
                 	.DEF _puntos2_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c034      	RJMP __RESET
000001 c062      	RJMP _ext_int0_isr
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 c06f      	RJMP _ext_int2_isr
000013 cfec      	RJMP 0x00
000014 cfeb      	RJMP 0x00
                 
                 _tbl10_G101:
000015 2710
000016 03e8
000017 0064
000018 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000019 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00001a 1000
00001b 0100
00001c 0010
00001d 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
00001e 3130
00001f 3332
000020 3534
000021 3736      	.DB  0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37
000022 3938      	.DB  0x38,0x39
                 _0x4:
000023 7940
000024 3024
000025 1219
000026 7802      	.DB  0x40,0x79,0x24,0x30,0x19,0x12,0x2,0x78
000027 1000
000028 cfc0
000029 86a4
00002a 928b      	.DB  0x0,0x10,0xC0,0xCF,0xA4,0x86,0x8B,0x92
00002b c790
00002c 8280      	.DB  0x90,0xC7,0x80,0x82
                 _0x2000003:
00002d c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00002e 0014      	.DW  0x14
00002f 0104      	.DW  _tabla7segmentos
000030 0046      	.DW  _0x4*2
                 
000031 0002      	.DW  0x02
000032 0118      	.DW  __base_y_G100
000033 005a      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000034 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000035 94f8      	CLI
000036 27ee      	CLR  R30
000037 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000038 e0f1      	LDI  R31,1
000039 bffb      	OUT  GICR,R31
00003a bfeb      	OUT  GICR,R30
00003b bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00003c e1f8      	LDI  R31,0x18
00003d bdf1      	OUT  WDTCR,R31
00003e bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00003f e08d      	LDI  R24,(14-2)+1
000040 e0a2      	LDI  R26,2
000041 27bb      	CLR  R27
                 __CLEAR_REG:
000042 93ed      	ST   X+,R30
000043 958a      	DEC  R24
000044 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000045 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000046 e092      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000047 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000048 93ed      	ST   X+,R30
000049 9701      	SBIW R24,1
00004a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00004b e5ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00004c e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00004d 9185      	LPM  R24,Z+
00004e 9195      	LPM  R25,Z+
00004f 9700      	SBIW R24,0
000050 f061      	BREQ __GLOBAL_INI_END
000051 91a5      	LPM  R26,Z+
000052 91b5      	LPM  R27,Z+
000053 9005      	LPM  R0,Z+
000054 9015      	LPM  R1,Z+
000055 01bf      	MOVW R22,R30
000056 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000057 9005      	LPM  R0,Z+
000058 920d      	ST   X+,R0
000059 9701      	SBIW R24,1
00005a f7e1      	BRNE __GLOBAL_INI_LOOP
00005b 01fb      	MOVW R30,R22
00005c cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00005d e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00005e bfed      	OUT  SPL,R30
00005f e0e2      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000060 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000061 eec0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000062 e0d0      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000063 c047      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0xE0
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.DSEG
                 ;interrupt [2] void ext_int0_isr(void)
                 ; 0000 003F {
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
000064 d379      	RCALL SUBOPT_0x0
                 ; 0000 0040 // Place your code here
                 ; 0000 0041 if(cont1>20){
000065 15e6      	CP   R30,R6
000066 05f7      	CPC  R31,R7
000067 f4ac      	BRGE _0x5
                 ; 0000 0042 cont1=0;
000068 2466      	CLR  R6
000069 2477      	CLR  R7
                 ; 0000 0043 if(inst){
00006a d37e      	RCALL SUBOPT_0x1
00006b f051      	BREQ _0x6
                 ; 0000 0044 //Derecha
                 ; 0000 0045 barra1++;
00006c d382      	RCALL SUBOPT_0x2
00006d 9631      	ADIW R30,1
00006e d4f3      	RCALL __EEPROMWRW
                 ; 0000 0046 if(barra1>3){
00006f d37f      	RCALL SUBOPT_0x2
000070 9734      	SBIW R30,4
000071 f01c      	BRLT _0x7
                 ; 0000 0047 barra1=3;
000072 e0a2      	LDI  R26,LOW(_barra1)
000073 e0b0      	LDI  R27,HIGH(_barra1)
000074 d37e      	RCALL SUBOPT_0x3
                 ; 0000 0048 }
                 ; 0000 0049 }else{
                 _0x7:
000075 c006      	RJMP _0x8
                 _0x6:
                 ; 0000 004A //Izquierda
                 ; 0000 004B barra1--;
000076 d378      	RCALL SUBOPT_0x2
000077 9731      	SBIW R30,1
000078 d4e9      	RCALL __EEPROMWRW
                 ; 0000 004C if(barra1<0){
000079 d37d      	RCALL SUBOPT_0x4
00007a f40a      	BRPL _0x9
                 ; 0000 004D barra1=0;
00007b d380      	RCALL SUBOPT_0x5
                 ; 0000 004E }
                 ; 0000 004F }
                 _0x9:
                 _0x8:
                 ; 0000 0050 }else{
00007c c004      	RJMP _0xA
                 _0x5:
                 ; 0000 0051 cont1++;
00007d 01f3      	MOVW R30,R6
00007e 9631      	ADIW R30,1
00007f 013f      	MOVW R6,R30
000080 9731      	SBIW R30,1
                 ; 0000 0052 }
                 _0xA:
                 ; 0000 0053 }
000081 c020      	RJMP _0xDB
                 ; .FEND
                 ;interrupt [19] void ext_int2_isr(void)
                 ; 0000 0057 {
                 _ext_int2_isr:
                 ; .FSTART _ext_int2_isr
000082 d35b      	RCALL SUBOPT_0x0
                 ; 0000 0058 // Place your code here
                 ; 0000 0059 if(cont2>20){
000083 15e8      	CP   R30,R8
000084 05f9      	CPC  R31,R9
000085 f4c4      	BRGE _0xB
                 ; 0000 005A cont2=0;
000086 2488      	CLR  R8
000087 2499      	CLR  R9
                 ; 0000 005B if(inst){
000088 d360      	RCALL SUBOPT_0x1
000089 f059      	BREQ _0xC
                 ; 0000 005C //Izquierda
                 ; 0000 005D barra2--;
00008a d377      	RCALL SUBOPT_0x6
00008b d4c6      	RCALL __EEPROMRDW
00008c 9731      	SBIW R30,1
00008d d4d4      	RCALL __EEPROMWRW
                 ; 0000 005E if(barra2<0){
00008e d376      	RCALL SUBOPT_0x7
00008f f422      	BRPL _0xD
                 ; 0000 005F barra2=0;
000090 d371      	RCALL SUBOPT_0x6
000091 e0e0      	LDI  R30,LOW(0)
000092 e0f0      	LDI  R31,HIGH(0)
000093 d4ce      	RCALL __EEPROMWRW
                 ; 0000 0060 }
                 ; 0000 0061 }else{
                 _0xD:
000094 c008      	RJMP _0xE
                 _0xC:
                 ; 0000 0062 //Derecha
                 ; 0000 0063 barra2++;
000095 d374      	RCALL SUBOPT_0x8
000096 9631      	ADIW R30,1
000097 d4ca      	RCALL __EEPROMWRW
                 ; 0000 0064 if(barra2>3){
000098 d371      	RCALL SUBOPT_0x8
000099 9734      	SBIW R30,4
00009a f014      	BRLT _0xF
                 ; 0000 0065 barra2=3;
00009b d366      	RCALL SUBOPT_0x6
00009c d356      	RCALL SUBOPT_0x3
                 ; 0000 0066 }
                 ; 0000 0067 
                 ; 0000 0068 }
                 _0xF:
                 _0xE:
                 ; 0000 0069 }else{
00009d c004      	RJMP _0x10
                 _0xB:
                 ; 0000 006A cont2++;
00009e 01f4      	MOVW R30,R8
00009f 9631      	ADIW R30,1
0000a0 014f      	MOVW R8,R30
0000a1 9731      	SBIW R30,1
                 ; 0000 006B }
                 _0x10:
                 ; 0000 006C 
                 ; 0000 006D }
                 _0xDB:
0000a2 91e9      	LD   R30,Y+
0000a3 bfef      	OUT  SREG,R30
0000a4 91f9      	LD   R31,Y+
0000a5 91e9      	LD   R30,Y+
0000a6 91b9      	LD   R27,Y+
0000a7 91a9      	LD   R26,Y+
0000a8 9199      	LD   R25,Y+
0000a9 9189      	LD   R24,Y+
0000aa 9518      	RETI
                 ; .FEND
                 ;void main(void)
                 ; 0000 0072 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0073 // Declare your local variables here
                 ; 0000 0074 
                 ; 0000 0075 // Input/Output Ports initialization
                 ; 0000 0076 // Port A initialization
                 ; 0000 0077 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 0078 // State7=0 State6=1 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
                 ; 0000 0079 PORTA=0x40;
0000ab e4e0      	LDI  R30,LOW(64)
0000ac bbeb      	OUT  0x1B,R30
                 ; 0000 007A DDRA=0xFF;
0000ad efef      	LDI  R30,LOW(255)
0000ae bbea      	OUT  0x1A,R30
                 ; 0000 007B 
                 ; 0000 007C // Port B initialization
                 ; 0000 007D // Func7=Out Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=Out
                 ; 0000 007E // State7=1 State6=P State5=P State4=P State3=P State2=P State1=P State0=1
                 ; 0000 007F PORTB=0xFF;
0000af bbe8      	OUT  0x18,R30
                 ; 0000 0080 DDRB=0x81;
0000b0 e8e1      	LDI  R30,LOW(129)
0000b1 bbe7      	OUT  0x17,R30
                 ; 0000 0081 
                 ; 0000 0082 // Port C initialization
                 ; 0000 0083 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 0084 // State7=0 State6=1 State5=1 State4=0 State3=0 State2=0 State1=0 State0=0
                 ; 0000 0085 PORTC=0x60;
0000b2 e6e0      	LDI  R30,LOW(96)
0000b3 bbe5      	OUT  0x15,R30
                 ; 0000 0086 DDRC=0xFF;
0000b4 efef      	LDI  R30,LOW(255)
0000b5 bbe4      	OUT  0x14,R30
                 ; 0000 0087 
                 ; 0000 0088 // Port D initialization
                 ; 0000 0089 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=Out Func0=Out
                 ; 0000 008A // State7=1 State6=1 State5=1 State4=1 State3=1 State2=P State1=1 State0=1
                 ; 0000 008B PORTD=0xFF;
0000b6 bbe2      	OUT  0x12,R30
                 ; 0000 008C DDRD=0xFB;
0000b7 efeb      	LDI  R30,LOW(251)
0000b8 bbe1      	OUT  0x11,R30
                 ; 0000 008D 
                 ; 0000 008E // Timer/Counter 0 initialization
                 ; 0000 008F // Clock source: System Clock
                 ; 0000 0090 // Clock value: Timer 0 Stopped
                 ; 0000 0091 // Mode: Normal top=0xFF
                 ; 0000 0092 // OC0 output: Disconnected
                 ; 0000 0093 TCCR0=0x00;
0000b9 e0e0      	LDI  R30,LOW(0)
0000ba bfe3      	OUT  0x33,R30
                 ; 0000 0094 TCNT0=0x00;
0000bb bfe2      	OUT  0x32,R30
                 ; 0000 0095 OCR0=0x00;
0000bc bfec      	OUT  0x3C,R30
                 ; 0000 0096 
                 ; 0000 0097 // Timer/Counter 1 initialization
                 ; 0000 0098 // Clock source: System Clock
                 ; 0000 0099 // Clock value: Timer1 Stopped
                 ; 0000 009A // Mode: Normal top=0xFFFF
                 ; 0000 009B // OC1A output: Discon.
                 ; 0000 009C // OC1B output: Discon.
                 ; 0000 009D // Noise Canceler: Off
                 ; 0000 009E // Input Capture on Falling Edge
                 ; 0000 009F // Timer1 Overflow Interrupt: Off
                 ; 0000 00A0 // Input Capture Interrupt: Off
                 ; 0000 00A1 // Compare A Match Interrupt: Off
                 ; 0000 00A2 // Compare B Match Interrupt: Off
                 ; 0000 00A3 TCCR1A=0x00;
0000bd bdef      	OUT  0x2F,R30
                 ; 0000 00A4 TCCR1B=0x00;
0000be bdee      	OUT  0x2E,R30
                 ; 0000 00A5 TCNT1H=0x00;
0000bf bded      	OUT  0x2D,R30
                 ; 0000 00A6 TCNT1L=0x00;
0000c0 bdec      	OUT  0x2C,R30
                 ; 0000 00A7 ICR1H=0x00;
0000c1 bde7      	OUT  0x27,R30
                 ; 0000 00A8 ICR1L=0x00;
0000c2 bde6      	OUT  0x26,R30
                 ; 0000 00A9 OCR1AH=0x00;
0000c3 bdeb      	OUT  0x2B,R30
                 ; 0000 00AA OCR1AL=0x00;
0000c4 bdea      	OUT  0x2A,R30
                 ; 0000 00AB OCR1BH=0x00;
0000c5 bde9      	OUT  0x29,R30
                 ; 0000 00AC OCR1BL=0x00;
0000c6 bde8      	OUT  0x28,R30
                 ; 0000 00AD 
                 ; 0000 00AE // Timer/Counter 2 initialization
                 ; 0000 00AF // Clock source: System Clock
                 ; 0000 00B0 // Clock value: Timer2 Stopped
                 ; 0000 00B1 // Mode: Normal top=0xFF
                 ; 0000 00B2 // OC2 output: Disconnected
                 ; 0000 00B3 ASSR=0x00;
0000c7 bde2      	OUT  0x22,R30
                 ; 0000 00B4 TCCR2=0x00;
0000c8 bde5      	OUT  0x25,R30
                 ; 0000 00B5 TCNT2=0x00;
0000c9 bde4      	OUT  0x24,R30
                 ; 0000 00B6 OCR2=0x00;
0000ca bde3      	OUT  0x23,R30
                 ; 0000 00B7 
                 ; 0000 00B8 // External Interrupt(s) initialization
                 ; 0000 00B9 // INT0: On
                 ; 0000 00BA // INT0 Mode: Falling Edge
                 ; 0000 00BB // INT1: Off
                 ; 0000 00BC // INT2: On
                 ; 0000 00BD // INT2 Mode: Falling Edge
                 ; 0000 00BE GICR|=0x60;
0000cb b7eb      	IN   R30,0x3B
0000cc 66e0      	ORI  R30,LOW(0x60)
0000cd bfeb      	OUT  0x3B,R30
                 ; 0000 00BF MCUCR=0x02;
0000ce e0e2      	LDI  R30,LOW(2)
0000cf bfe5      	OUT  0x35,R30
                 ; 0000 00C0 MCUCSR=0x00;
0000d0 e0e0      	LDI  R30,LOW(0)
0000d1 bfe4      	OUT  0x34,R30
                 ; 0000 00C1 GIFR=0x60;
0000d2 e6e0      	LDI  R30,LOW(96)
0000d3 bfea      	OUT  0x3A,R30
                 ; 0000 00C2 
                 ; 0000 00C3 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 00C4 TIMSK=0x00;
0000d4 e0e0      	LDI  R30,LOW(0)
0000d5 bfe9      	OUT  0x39,R30
                 ; 0000 00C5 
                 ; 0000 00C6 // USART initialization
                 ; 0000 00C7 // USART disabled
                 ; 0000 00C8 UCSRB=0x00;
0000d6 b9ea      	OUT  0xA,R30
                 ; 0000 00C9 
                 ; 0000 00CA // Analog Comparator initialization
                 ; 0000 00CB // Analog Comparator: Off
                 ; 0000 00CC // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 00CD ACSR=0x80;
0000d7 e8e0      	LDI  R30,LOW(128)
0000d8 b9e8      	OUT  0x8,R30
                 ; 0000 00CE SFIOR=0x00;
0000d9 e0e0      	LDI  R30,LOW(0)
0000da bfe0      	OUT  0x30,R30
                 ; 0000 00CF 
                 ; 0000 00D0 // ADC initialization
                 ; 0000 00D1 // ADC disabled
                 ; 0000 00D2 ADCSRA=0x00;
0000db b9e6      	OUT  0x6,R30
                 ; 0000 00D3 
                 ; 0000 00D4 // SPI initialization
                 ; 0000 00D5 // SPI disabled
                 ; 0000 00D6 SPCR=0x00;
0000dc b9ed      	OUT  0xD,R30
                 ; 0000 00D7 
                 ; 0000 00D8 // TWI initialization
                 ; 0000 00D9 // TWI disabled
                 ; 0000 00DA TWCR=0x00;
0000dd bfe6      	OUT  0x36,R30
                 ; 0000 00DB 
                 ; 0000 00DC // Global enable interrupts
                 ; 0000 00DD #asm("sei")
0000de 9478      	SEI
                 ; 0000 00DE if(random<1){
0000df d32d      	RCALL SUBOPT_0x9
0000e0 d471      	RCALL __EEPROMRDW
0000e1 9731      	SBIW R30,1
0000e2 f41c      	BRGE _0x11
                 ; 0000 00DF random=1;
0000e3 d329      	RCALL SUBOPT_0x9
0000e4 d32b      	RCALL SUBOPT_0xA
0000e5 d47c      	RCALL __EEPROMWRW
                 ; 0000 00E0 }
                 ; 0000 00E1 //multiplicar por numero primo
                 ; 0000 00E2 random=(random*7)+2;
                 _0x11:
0000e6 d326      	RCALL SUBOPT_0x9
0000e7 d46a      	RCALL __EEPROMRDW
0000e8 d32a      	RCALL SUBOPT_0xB
0000e9 9632      	ADIW R30,2
0000ea d32c      	RCALL SUBOPT_0xC
                 ; 0000 00E3 random=random%17;
0000eb 01df      	MOVW R26,R30
0000ec e1e1      	LDI  R30,LOW(17)
0000ed e0f0      	LDI  R31,HIGH(17)
0000ee d43d      	RCALL __MODW21
0000ef d327      	RCALL SUBOPT_0xC
                 ; 0000 00E4 //definir direccion
                 ; 0000 00E5 rand=(int)random;
0000f0 d32b      	RCALL SUBOPT_0xD
                 ; 0000 00E6 rand*=7;
0000f1 d321      	RCALL SUBOPT_0xB
0000f2 d329      	RCALL SUBOPT_0xD
                 ; 0000 00E7 direccion=rand%4;
0000f3 e0a3      	LDI  R26,LOW(3)
0000f4 e0b0      	LDI  R27,HIGH(3)
0000f5 d328      	RCALL SUBOPT_0xE
                 ; 0000 00E8 //definir x
                 ; 0000 00E9 x=2;
0000f6 d32d      	RCALL SUBOPT_0xF
0000f7 d32f      	RCALL SUBOPT_0x10
                 ; 0000 00EA //definir y
                 ; 0000 00EB y=3;
                 ; 0000 00EC //
                 ; 0000 00ED if(!(barra1>=0 && barra1<=3)){
0000f8 d2fe      	RCALL SUBOPT_0x4
0000f9 f01a      	BRMI _0x13
0000fa d2f4      	RCALL SUBOPT_0x2
0000fb 9734      	SBIW R30,4
0000fc f00c      	BRLT _0x12
                 _0x13:
                 ; 0000 00EE barra1=0;
0000fd d2fe      	RCALL SUBOPT_0x5
                 ; 0000 00EF }
                 ; 0000 00F0 if(!(barra2>=0 && barra2<=3)){
                 _0x12:
0000fe d306      	RCALL SUBOPT_0x7
0000ff f01a      	BRMI _0x16
000100 d309      	RCALL SUBOPT_0x8
000101 9734      	SBIW R30,4
000102 f014      	BRLT _0x15
                 _0x16:
                 ; 0000 00F1 barra2=3;
000103 d2fe      	RCALL SUBOPT_0x6
000104 d2ee      	RCALL SUBOPT_0x3
                 ; 0000 00F2 }
                 ; 0000 00F3 //------------
                 ; 0000 00F4 cont1=0;
                 _0x15:
000105 2466      	CLR  R6
000106 2477      	CLR  R7
                 ; 0000 00F5 cont2=0;
000107 2488      	CLR  R8
000108 2499      	CLR  R9
                 ; 0000 00F6 i=j=0;
000109 e0e0      	LDI  R30,LOW(0)
00010a e0f0      	LDI  R31,HIGH(0)
00010b 93e0 00e2 	STS  _j,R30
00010d 93f0 00e3 	STS  _j+1,R31
00010f 93e0 00e0 	STS  _i,R30
000111 93f0 00e1 	STS  _i+1,R31
                 ; 0000 00F7 rapidez1=99;
000113 e6e3      	LDI  R30,LOW(99)
000114 e0f0      	LDI  R31,HIGH(99)
000115 93e0 00f6 	STS  _rapidez1,R30
000117 93f0 00f7 	STS  _rapidez1+1,R31
                 ; 0000 00F8 rapidez=rapidez1;
000119 d318      	RCALL SUBOPT_0x11
00011a d31c      	RCALL SUBOPT_0x12
                 ; 0000 00F9 rapidez2=(float)(rapidez1);
00011b d320      	RCALL SUBOPT_0x13
                 ; 0000 00FA dsplz=0;
00011c d32e      	RCALL SUBOPT_0x14
                 ; 0000 00FB stay=0;
00011d d333      	RCALL SUBOPT_0x15
                 ; 0000 00FC cols=0;
00011e d338      	RCALL SUBOPT_0x16
                 ; 0000 00FD puntos1=0;
00011f 24aa      	CLR  R10
000120 24bb      	CLR  R11
                 ; 0000 00FE puntos2=0;
000121 24cc      	CLR  R12
000122 24dd      	CLR  R13
                 ; 0000 00FF inst=0;
000123 d339      	RCALL SUBOPT_0x17
                 ; 0000 0100 gan1=0;
000124 e0e0      	LDI  R30,LOW(0)
000125 93e0 00fc 	STS  _gan1,R30
000127 93e0 00fd 	STS  _gan1+1,R30
                 ; 0000 0101 gan2=0;
000129 93e0 00fe 	STS  _gan2,R30
00012b 93e0 00ff 	STS  _gan2+1,R30
                 ; 0000 0102 gan3=0;
00012d 93e0 0100 	STS  _gan3,R30
00012f 93e0 0101 	STS  _gan3+1,R30
                 ; 0000 0103 gan4=0;
000131 93e0 0102 	STS  _gan4,R30
000133 93e0 0103 	STS  _gan4+1,R30
                 ; 0000 0104 win=0;
000135 93e0 00f2 	STS  _win,R30
000137 93e0 00f3 	STS  _win+1,R30
                 ; 0000 0105 
                 ; 0000 0106 while (1)
                 _0x18:
                 ; 0000 0107 {
                 ; 0000 0108 
                 ; 0000 0109 // Place your code here
                 ; 0000 010A if(!win){
000139 91e0 00f2 	LDS  R30,_win
00013b 91f0 00f3 	LDS  R31,_win+1
00013d 9730      	SBIW R30,0
00013e f009      	BREQ PC+2
00013f c29c      	RJMP _0x1B
                 ; 0000 010B 
                 ; 0000 010C 
                 ; 0000 010D delay_ms(1);
000140 e0a1      	LDI  R26,LOW(1)
000141 e0b0      	LDI  R27,0
000142 d55d      	RCALL _delay_ms
                 ; 0000 010E 
                 ; 0000 010F //
                 ; 0000 0110 //
                 ; 0000 0111 cols++;
000143 eeae      	LDI  R26,LOW(_cols)
000144 e0b0      	LDI  R27,HIGH(_cols)
000145 d31d      	RCALL SUBOPT_0x18
                 ; 0000 0112 if(cols>4){
000146 d322      	RCALL SUBOPT_0x19
000147 9715      	SBIW R26,5
000148 f00c      	BRLT _0x1C
                 ; 0000 0113 cols=0;
000149 d30d      	RCALL SUBOPT_0x16
                 ; 0000 0114 }
                 ; 0000 0115 //
                 ; 0000 0116 //
                 ; 0000 0117 PORTA &=0x7f;
                 _0x1C:
00014a 98df      	CBI  0x1B,7
                 ; 0000 0118 PORTC &=0x7f;
00014b 98af      	CBI  0x15,7
                 ; 0000 0119 PORTB |=0x81;
00014c b3e8      	IN   R30,0x18
00014d 68e1      	ORI  R30,LOW(0x81)
00014e bbe8      	OUT  0x18,R30
                 ; 0000 011A PORTC |=0x60;
00014f b3e5      	IN   R30,0x15
000150 66e0      	ORI  R30,LOW(0x60)
000151 bbe5      	OUT  0x15,R30
                 ; 0000 011B //
                 ; 0000 011C inst++;
000152 efa0      	LDI  R26,LOW(_inst)
000153 e0b0      	LDI  R27,HIGH(_inst)
000154 d30e      	RCALL SUBOPT_0x18
                 ; 0000 011D if(inst>1){
000155 d318      	RCALL SUBOPT_0x1A
000156 9712      	SBIW R26,2
000157 f00c      	BRLT _0x1D
                 ; 0000 011E inst=0;
000158 d304      	RCALL SUBOPT_0x17
                 ; 0000 011F }
                 ; 0000 0120 //
                 ; 0000 0121 if(inst){
                 _0x1D:
000159 d28f      	RCALL SUBOPT_0x1
00015a f041      	BREQ _0x1E
                 ; 0000 0122 PORTA =tabla7segmentos[inst][puntos2];
00015b d317      	RCALL SUBOPT_0x1B
00015c 0dec      	ADD  R30,R12
00015d 1dfd      	ADC  R31,R13
00015e 81e0      	LD   R30,Z
00015f bbeb      	OUT  0x1B,R30
                 ; 0000 0123 //PORTA |=0x80;
                 ; 0000 0124 PORTC &=0xbf;
000160 98ae      	CBI  0x15,6
                 ; 0000 0125 PORTB &=0x7f;
000161 98c7      	CBI  0x18,7
                 ; 0000 0126 }else{
000162 c008      	RJMP _0x1F
                 _0x1E:
                 ; 0000 0127 PORTA =tabla7segmentos[inst][puntos1];
000163 d30f      	RCALL SUBOPT_0x1B
000164 0dea      	ADD  R30,R10
000165 1dfb      	ADC  R31,R11
000166 81e0      	LD   R30,Z
000167 bbeb      	OUT  0x1B,R30
                 ; 0000 0128 PORTC |=0x80;
000168 9aaf      	SBI  0x15,7
                 ; 0000 0129 PORTC &=0xdf;
000169 98ad      	CBI  0x15,5
                 ; 0000 012A PORTB &=0xfe;
00016a 98c0      	CBI  0x18,0
                 ; 0000 012B }
                 _0x1F:
                 ; 0000 012C //Matriz de LEDs
                 ; 0000 012D if(dsplz>rapidez){
00016b 91e0 00f4 	LDS  R30,_rapidez
00016d 91f0 00f5 	LDS  R31,_rapidez+1
00016f 91a0 00ea 	LDS  R26,_dsplz
000171 91b0 00eb 	LDS  R27,_dsplz+1
000173 17ea      	CP   R30,R26
000174 07fb      	CPC  R31,R27
000175 f00c      	BRLT PC+2
000176 c10d      	RJMP _0x20
                 ; 0000 012E dsplz=0;
000177 d2d3      	RCALL SUBOPT_0x14
                 ; 0000 012F if(!stay){
000178 91e0 00ec 	LDS  R30,_stay
00017a 91f0 00ed 	LDS  R31,_stay+1
00017c 9730      	SBIW R30,0
00017d f431      	BRNE _0x21
                 ; 0000 0130 stay=1;
00017e d291      	RCALL SUBOPT_0xA
00017f 93e0 00ec 	STS  _stay,R30
000181 93f0 00ed 	STS  _stay+1,R31
                 ; 0000 0131 }else{
000183 c0ff      	RJMP _0x22
                 _0x21:
                 ; 0000 0132 stay=0;
000184 d2cc      	RCALL SUBOPT_0x15
                 ; 0000 0133 //Validaciones
                 ; 0000 0134 switch(direccion){
000185 d2f3      	RCALL SUBOPT_0x1C
                 ; 0000 0135 case 0: //noroeste
000186 f5d1      	BRNE _0x26
                 ; 0000 0136 if((x-1)<0){
000187 d2f7      	RCALL SUBOPT_0x1D
000188 23bb      	TST  R27
000189 f4aa      	BRPL _0x27
                 ; 0000 0137 if(y==1){
00018a d2fa      	RCALL SUBOPT_0x1E
00018b 9711      	SBIW R26,1
00018c f469      	BRNE _0x28
                 ; 0000 0138 if(barra2==0 || barra2==1){
00018d d27c      	RCALL SUBOPT_0x8
00018e 9730      	SBIW R30,0
00018f f011      	BREQ _0x2A
000190 d2f9      	RCALL SUBOPT_0x1F
000191 f411      	BRNE _0x29
                 _0x2A:
                 ; 0000 0139 direccion=2;
000192 d291      	RCALL SUBOPT_0xF
000193 c001      	RJMP _0xD8
                 ; 0000 013A 
                 ; 0000 013B }else{
                 _0x29:
                 ; 0000 013C direccion=1;
000194 d27b      	RCALL SUBOPT_0xA
                 _0xD8:
000195 93e0 00e8 	STS  _direccion,R30
000197 93f0 00e9 	STS  _direccion+1,R31
                 ; 0000 013D }
                 ; 0000 013E }else if(y>=2){
000199 c004      	RJMP _0x2D
                 _0x28:
00019a d2ea      	RCALL SUBOPT_0x1E
00019b 9712      	SBIW R26,2
00019c f00c      	BRLT _0x2E
                 ; 0000 013F direccion=1;
00019d d2f0      	RCALL SUBOPT_0x20
                 ; 0000 0140 }
                 ; 0000 0141 }else{
                 _0x2E:
                 _0x2D:
00019e c021      	RJMP _0x2F
                 _0x27:
                 ; 0000 0142 if(y==1){
00019f d2e5      	RCALL SUBOPT_0x1E
0001a0 9711      	SBIW R26,1
0001a1 f4d9      	BRNE _0x30
                 ; 0000 0143 if(barra2==0){
0001a2 d267      	RCALL SUBOPT_0x8
0001a3 9730      	SBIW R30,0
0001a4 f439      	BRNE _0x31
                 ; 0000 0144 if(x==1){
0001a5 d2d9      	RCALL SUBOPT_0x1D
0001a6 f409      	BRNE _0x32
                 ; 0000 0145 direccion=3;
0001a7 d2ec      	RCALL SUBOPT_0x21
                 ; 0000 0146 }
                 ; 0000 0147 if(x==2){
                 _0x32:
0001a8 d2f2      	RCALL SUBOPT_0x22
0001a9 f409      	BRNE _0x33
                 ; 0000 0148 direccion=2;
0001aa d2f6      	RCALL SUBOPT_0x23
                 ; 0000 0149 }
                 ; 0000 014A }else if(barra2==1){
                 _0x33:
0001ab c010      	RJMP _0x34
                 _0x31:
0001ac d25d      	RCALL SUBOPT_0x8
0001ad d2dc      	RCALL SUBOPT_0x1F
0001ae f439      	BRNE _0x35
                 ; 0000 014B if(x==2){
0001af d2eb      	RCALL SUBOPT_0x22
0001b0 f409      	BRNE _0x36
                 ; 0000 014C direccion=3;
0001b1 d2e2      	RCALL SUBOPT_0x21
                 ; 0000 014D }
                 ; 0000 014E if(x==3){
                 _0x36:
0001b2 d2f4      	RCALL SUBOPT_0x24
0001b3 f409      	BRNE _0x37
                 ; 0000 014F direccion=2;
0001b4 d2ec      	RCALL SUBOPT_0x23
                 ; 0000 0150 }
                 ; 0000 0151 }else if(barra2==2){
                 _0x37:
0001b5 c006      	RJMP _0x38
                 _0x35:
0001b6 d253      	RCALL SUBOPT_0x8
0001b7 d2f5      	RCALL SUBOPT_0x25
0001b8 f419      	BRNE _0x39
                 ; 0000 0152 if(x==3){
0001b9 d2ed      	RCALL SUBOPT_0x24
0001ba f409      	BRNE _0x3A
                 ; 0000 0153 direccion=3;
0001bb d2d8      	RCALL SUBOPT_0x21
                 ; 0000 0154 }
                 ; 0000 0155 }
                 _0x3A:
                 ; 0000 0156 }else if(y<=2){
                 _0x39:
                 _0x38:
                 _0x34:
0001bc c003      	RJMP _0x3B
                 _0x30:
0001bd d2c7      	RCALL SUBOPT_0x1E
0001be 9713      	SBIW R26,3
0001bf f404      	BRGE _0x3C
                 ; 0000 0157 //direccion=0;
                 ; 0000 0158 }
                 ; 0000 0159 }
                 _0x3C:
                 _0x3B:
                 _0x2F:
                 ; 0000 015A break;
0001c0 c0a3      	RJMP _0x25
                 ; 0000 015B case 1: //noreste
                 _0x26:
0001c1 d2c8      	RCALL SUBOPT_0x1F
0001c2 f5b1      	BRNE _0x3D
                 ; 0000 015C if((x+1)>4){
0001c3 d2ed      	RCALL SUBOPT_0x26
0001c4 f094      	BRLT _0x3E
                 ; 0000 015D if(y==1){
0001c5 d2bf      	RCALL SUBOPT_0x1E
0001c6 9711      	SBIW R26,1
0001c7 f451      	BRNE _0x3F
                 ; 0000 015E if(barra2==2 || barra2==3){
0001c8 d241      	RCALL SUBOPT_0x8
0001c9 01df      	MOVW R26,R30
0001ca 9732      	SBIW R30,2
0001cb f011      	BREQ _0x41
0001cc d2eb      	RCALL SUBOPT_0x27
0001cd f411      	BRNE _0x40
                 _0x41:
                 ; 0000 015F direccion=3;
0001ce d2c5      	RCALL SUBOPT_0x21
                 ; 0000 0160 
                 ; 0000 0161 }else{
0001cf c001      	RJMP _0x43
                 _0x40:
                 ; 0000 0162 direccion=0;
0001d0 d2ec      	RCALL SUBOPT_0x28
                 ; 0000 0163 }
                 _0x43:
                 ; 0000 0164 }else if(y>=2){
0001d1 c004      	RJMP _0x44
                 _0x3F:
0001d2 d2b2      	RCALL SUBOPT_0x1E
0001d3 9712      	SBIW R26,2
0001d4 f00c      	BRLT _0x45
                 ; 0000 0165 direccion=0;
0001d5 d2e7      	RCALL SUBOPT_0x28
                 ; 0000 0166 }
                 ; 0000 0167 }else{
                 _0x45:
                 _0x44:
0001d6 c021      	RJMP _0x46
                 _0x3E:
                 ; 0000 0168 if(y==1){
0001d7 d2ad      	RCALL SUBOPT_0x1E
0001d8 9711      	SBIW R26,1
0001d9 f4d9      	BRNE _0x47
                 ; 0000 0169 if(barra2==1){
0001da d22f      	RCALL SUBOPT_0x8
0001db d2ae      	RCALL SUBOPT_0x1F
0001dc f421      	BRNE _0x48
                 ; 0000 016A if(x==1){
0001dd d2a1      	RCALL SUBOPT_0x1D
0001de f409      	BRNE _0x49
                 ; 0000 016B direccion=2;
0001df d2c1      	RCALL SUBOPT_0x23
                 ; 0000 016C }
                 ; 0000 016D }else if(barra2==2){
                 _0x49:
0001e0 c013      	RJMP _0x4A
                 _0x48:
0001e1 d228      	RCALL SUBOPT_0x8
0001e2 d2ca      	RCALL SUBOPT_0x25
0001e3 f439      	BRNE _0x4B
                 ; 0000 016E if(x==2){
0001e4 d2b6      	RCALL SUBOPT_0x22
0001e5 f409      	BRNE _0x4C
                 ; 0000 016F direccion=2;
0001e6 d2ba      	RCALL SUBOPT_0x23
                 ; 0000 0170 }
                 ; 0000 0171 if(x==1){
                 _0x4C:
0001e7 d297      	RCALL SUBOPT_0x1D
0001e8 f409      	BRNE _0x4D
                 ; 0000 0172 direccion=3;
0001e9 d2aa      	RCALL SUBOPT_0x21
                 ; 0000 0173 }
                 ; 0000 0174 }else if (barra2==3){
                 _0x4D:
0001ea c009      	RJMP _0x4E
                 _0x4B:
0001eb d21e      	RCALL SUBOPT_0x8
0001ec d2d6      	RCALL SUBOPT_0x29
0001ed f431      	BRNE _0x4F
                 ; 0000 0175 if(x==3){
0001ee d2b8      	RCALL SUBOPT_0x24
0001ef f409      	BRNE _0x50
                 ; 0000 0176 direccion=2;
0001f0 d2b0      	RCALL SUBOPT_0x23
                 ; 0000 0177 }
                 ; 0000 0178 if(x==2){
                 _0x50:
0001f1 d2a9      	RCALL SUBOPT_0x22
0001f2 f409      	BRNE _0x51
                 ; 0000 0179 direccion=3;
0001f3 d2a0      	RCALL SUBOPT_0x21
                 ; 0000 017A }
                 ; 0000 017B }
                 _0x51:
                 ; 0000 017C }else if(y>=2){
                 _0x4F:
                 _0x4E:
                 _0x4A:
0001f4 c003      	RJMP _0x52
                 _0x47:
0001f5 d28f      	RCALL SUBOPT_0x1E
0001f6 9712      	SBIW R26,2
0001f7 f004      	BRLT _0x53
                 ; 0000 017D //direccion=1;
                 ; 0000 017E }
                 ; 0000 017F }
                 _0x53:
                 _0x52:
                 _0x46:
                 ; 0000 0180 break;
0001f8 c06b      	RJMP _0x25
                 ; 0000 0181 case 2: //sureste
                 _0x3D:
0001f9 d2b3      	RCALL SUBOPT_0x25
0001fa f591      	BRNE _0x54
                 ; 0000 0182 if((x+1)>4){
0001fb d2b5      	RCALL SUBOPT_0x26
0001fc f084      	BRLT _0x55
                 ; 0000 0183 if(y==5){
0001fd d2c9      	RCALL SUBOPT_0x2A
0001fe f451      	BRNE _0x56
                 ; 0000 0184 if(barra1==2 || barra1==3){
0001ff d1ef      	RCALL SUBOPT_0x2
000200 01df      	MOVW R26,R30
000201 9732      	SBIW R30,2
000202 f011      	BREQ _0x58
000203 d2b4      	RCALL SUBOPT_0x27
000204 f411      	BRNE _0x57
                 _0x58:
                 ; 0000 0185 direccion=0;
000205 d2b7      	RCALL SUBOPT_0x28
                 ; 0000 0186 
                 ; 0000 0187 }else{
000206 c001      	RJMP _0x5A
                 _0x57:
                 ; 0000 0188 direccion=3;
000207 d28c      	RCALL SUBOPT_0x21
                 ; 0000 0189 }
                 _0x5A:
                 ; 0000 018A }else if(y<=4){
000208 c003      	RJMP _0x5B
                 _0x56:
000209 d2bd      	RCALL SUBOPT_0x2A
00020a f40c      	BRGE _0x5C
                 ; 0000 018B direccion=3;
00020b d288      	RCALL SUBOPT_0x21
                 ; 0000 018C }
                 ; 0000 018D }else{
                 _0x5C:
                 _0x5B:
00020c c01f      	RJMP _0x5D
                 _0x55:
                 ; 0000 018E if(y==5){
00020d d2b9      	RCALL SUBOPT_0x2A
00020e f4d9      	BRNE _0x5E
                 ; 0000 018F if(barra1==1){
00020f d1df      	RCALL SUBOPT_0x2
000210 d279      	RCALL SUBOPT_0x1F
000211 f421      	BRNE _0x5F
                 ; 0000 0190 if(x==1){
000212 d26c      	RCALL SUBOPT_0x1D
000213 f409      	BRNE _0x60
                 ; 0000 0191 direccion=1;
000214 d279      	RCALL SUBOPT_0x20
                 ; 0000 0192 }
                 ; 0000 0193 }else if(barra1==2){
                 _0x60:
000215 c013      	RJMP _0x61
                 _0x5F:
000216 d1d8      	RCALL SUBOPT_0x2
000217 d295      	RCALL SUBOPT_0x25
000218 f439      	BRNE _0x62
                 ; 0000 0194 if(x==2){
000219 d281      	RCALL SUBOPT_0x22
00021a f409      	BRNE _0x63
                 ; 0000 0195 direccion=1;
00021b d272      	RCALL SUBOPT_0x20
                 ; 0000 0196 }
                 ; 0000 0197 if(x==1){
                 _0x63:
00021c d262      	RCALL SUBOPT_0x1D
00021d f409      	BRNE _0x64
                 ; 0000 0198 direccion=0;
00021e d29e      	RCALL SUBOPT_0x28
                 ; 0000 0199 }
                 ; 0000 019A }else if (barra1==3){
                 _0x64:
00021f c009      	RJMP _0x65
                 _0x62:
000220 d1ce      	RCALL SUBOPT_0x2
000221 d2a1      	RCALL SUBOPT_0x29
000222 f431      	BRNE _0x66
                 ; 0000 019B if(x==3){
000223 d283      	RCALL SUBOPT_0x24
000224 f409      	BRNE _0x67
                 ; 0000 019C direccion=1;
000225 d268      	RCALL SUBOPT_0x20
                 ; 0000 019D }
                 ; 0000 019E if(x==2){
                 _0x67:
000226 d274      	RCALL SUBOPT_0x22
000227 f409      	BRNE _0x68
                 ; 0000 019F direccion=0;
000228 d294      	RCALL SUBOPT_0x28
                 ; 0000 01A0 }
                 ; 0000 01A1 }
                 _0x68:
                 ; 0000 01A2 }else if(y<=4){
                 _0x66:
                 _0x65:
                 _0x61:
000229 c002      	RJMP _0x69
                 _0x5E:
00022a d29c      	RCALL SUBOPT_0x2A
00022b f404      	BRGE _0x6A
                 ; 0000 01A3 //direccion=2;
                 ; 0000 01A4 }
                 ; 0000 01A5 }
                 _0x6A:
                 _0x69:
                 _0x5D:
                 ; 0000 01A6 break;
00022c c037      	RJMP _0x25
                 ; 0000 01A7 case 3: //suroeste
                 _0x54:
00022d d295      	RCALL SUBOPT_0x29
00022e f5a9      	BRNE _0x82
                 ; 0000 01A8 if((x-1)<0){
00022f d24f      	RCALL SUBOPT_0x1D
000230 23bb      	TST  R27
000231 f49a      	BRPL _0x6C
                 ; 0000 01A9 if(y==5){
000232 d294      	RCALL SUBOPT_0x2A
000233 f469      	BRNE _0x6D
                 ; 0000 01AA if(barra1==0 || barra1==1){
000234 d1ba      	RCALL SUBOPT_0x2
000235 9730      	SBIW R30,0
000236 f011      	BREQ _0x6F
000237 d252      	RCALL SUBOPT_0x1F
000238 f411      	BRNE _0x6E
                 _0x6F:
                 ; 0000 01AB direccion=1;
000239 d1d6      	RCALL SUBOPT_0xA
00023a c001      	RJMP _0xD9
                 ; 0000 01AC 
                 ; 0000 01AD }else{
                 _0x6E:
                 ; 0000 01AE direccion=2;
00023b d1e8      	RCALL SUBOPT_0xF
                 _0xD9:
00023c 93e0 00e8 	STS  _direccion,R30
00023e 93f0 00e9 	STS  _direccion+1,R31
                 ; 0000 01AF }
                 ; 0000 01B0 }else if(y<=4){
000240 c003      	RJMP _0x72
                 _0x6D:
000241 d285      	RCALL SUBOPT_0x2A
000242 f40c      	BRGE _0x73
                 ; 0000 01B1 direccion=2;
000243 d25d      	RCALL SUBOPT_0x23
                 ; 0000 01B2 }
                 ; 0000 01B3 }else{
                 _0x73:
                 _0x72:
000244 c01f      	RJMP _0x74
                 _0x6C:
                 ; 0000 01B4 if(y==5){
000245 d281      	RCALL SUBOPT_0x2A
000246 f4d9      	BRNE _0x75
                 ; 0000 01B5 if(barra1==0){
000247 d1a7      	RCALL SUBOPT_0x2
000248 9730      	SBIW R30,0
000249 f439      	BRNE _0x76
                 ; 0000 01B6 if(x==1){
00024a d234      	RCALL SUBOPT_0x1D
00024b f409      	BRNE _0x77
                 ; 0000 01B7 direccion=0;
00024c d270      	RCALL SUBOPT_0x28
                 ; 0000 01B8 }
                 ; 0000 01B9 if(x==2){
                 _0x77:
00024d d24d      	RCALL SUBOPT_0x22
00024e f409      	BRNE _0x78
                 ; 0000 01BA direccion=1;
00024f d23e      	RCALL SUBOPT_0x20
                 ; 0000 01BB }
                 ; 0000 01BC }else if(barra1==1){
                 _0x78:
000250 c010      	RJMP _0x79
                 _0x76:
000251 d19d      	RCALL SUBOPT_0x2
000252 d237      	RCALL SUBOPT_0x1F
000253 f439      	BRNE _0x7A
                 ; 0000 01BD if(x==2){
000254 d246      	RCALL SUBOPT_0x22
000255 f409      	BRNE _0x7B
                 ; 0000 01BE direccion=0;
000256 d266      	RCALL SUBOPT_0x28
                 ; 0000 01BF }
                 ; 0000 01C0 if(x==3){
                 _0x7B:
000257 d24f      	RCALL SUBOPT_0x24
000258 f409      	BRNE _0x7C
                 ; 0000 01C1 direccion=1;
000259 d234      	RCALL SUBOPT_0x20
                 ; 0000 01C2 }
                 ; 0000 01C3 }else if(barra1==2){
                 _0x7C:
00025a c006      	RJMP _0x7D
                 _0x7A:
00025b d193      	RCALL SUBOPT_0x2
00025c d250      	RCALL SUBOPT_0x25
00025d f419      	BRNE _0x7E
                 ; 0000 01C4 if(x==3){
00025e d248      	RCALL SUBOPT_0x24
00025f f409      	BRNE _0x7F
                 ; 0000 01C5 direccion=0;
000260 d25c      	RCALL SUBOPT_0x28
                 ; 0000 01C6 }
                 ; 0000 01C7 }
                 _0x7F:
                 ; 0000 01C8 }else if(y<=4){
                 _0x7E:
                 _0x7D:
                 _0x79:
000261 c002      	RJMP _0x80
                 _0x75:
000262 d264      	RCALL SUBOPT_0x2A
000263 f404      	BRGE _0x81
                 ; 0000 01C9 //direccion=3;
                 ; 0000 01CA }
                 ; 0000 01CB }
                 _0x81:
                 _0x80:
                 _0x74:
                 ; 0000 01CC break;
                 ; 0000 01CD default:
                 _0x82:
                 ; 0000 01CE break;
                 ; 0000 01CF }
                 _0x25:
                 ; 0000 01D0 //
                 ; 0000 01D1 switch(direccion){
000264 d214      	RCALL SUBOPT_0x1C
                 ; 0000 01D2 case 0: //noroeste
000265 f431      	BRNE _0x86
                 ; 0000 01D3 x--;
000266 d263      	RCALL SUBOPT_0x2B
000267 d265      	RCALL SUBOPT_0x2C
                 ; 0000 01D4 y--;
000268 eea6      	LDI  R26,LOW(_y)
000269 e0b0      	LDI  R27,HIGH(_y)
00026a d262      	RCALL SUBOPT_0x2C
                 ; 0000 01D5 break;
00026b c017      	RJMP _0x85
                 ; 0000 01D6 case 1: //noreste
                 _0x86:
00026c d21d      	RCALL SUBOPT_0x1F
00026d f431      	BRNE _0x87
                 ; 0000 01D7 x++;
00026e d25b      	RCALL SUBOPT_0x2B
00026f d1f3      	RCALL SUBOPT_0x18
                 ; 0000 01D8 y--;
000270 eea6      	LDI  R26,LOW(_y)
000271 e0b0      	LDI  R27,HIGH(_y)
000272 d25a      	RCALL SUBOPT_0x2C
                 ; 0000 01D9 break;
000273 c00f      	RJMP _0x85
                 ; 0000 01DA case 2: //sureste
                 _0x87:
000274 d238      	RCALL SUBOPT_0x25
000275 f431      	BRNE _0x88
                 ; 0000 01DB x++;
000276 d253      	RCALL SUBOPT_0x2B
000277 d1eb      	RCALL SUBOPT_0x18
                 ; 0000 01DC y++;
000278 eea6      	LDI  R26,LOW(_y)
000279 e0b0      	LDI  R27,HIGH(_y)
00027a d1e8      	RCALL SUBOPT_0x18
                 ; 0000 01DD break;
00027b c007      	RJMP _0x85
                 ; 0000 01DE case 3: //suroeste
                 _0x88:
00027c d246      	RCALL SUBOPT_0x29
00027d f429      	BRNE _0x8A
                 ; 0000 01DF x--;
00027e d24b      	RCALL SUBOPT_0x2B
00027f d24d      	RCALL SUBOPT_0x2C
                 ; 0000 01E0 y++;
000280 eea6      	LDI  R26,LOW(_y)
000281 e0b0      	LDI  R27,HIGH(_y)
000282 d1e0      	RCALL SUBOPT_0x18
                 ; 0000 01E1 break;
                 ; 0000 01E2 default:
                 _0x8A:
                 ; 0000 01E3 break;
                 ; 0000 01E4 }
                 _0x85:
                 ; 0000 01E5 }
                 _0x22:
                 ; 0000 01E6 }else{
000283 c003      	RJMP _0x8B
                 _0x20:
                 ; 0000 01E7 dsplz++;
000284 eeaa      	LDI  R26,LOW(_dsplz)
000285 e0b0      	LDI  R27,HIGH(_dsplz)
000286 d1dc      	RCALL SUBOPT_0x18
                 ; 0000 01E8 }
                 _0x8B:
                 ; 0000 01E9 //
                 ; 0000 01EA PORTD |=0xfb;
000287 d24b      	RCALL SUBOPT_0x2D
                 ; 0000 01EB PORTC &=0xe0;
                 ; 0000 01EC if((cols%5)==x){
000288 d251      	RCALL SUBOPT_0x2E
000289 01df      	MOVW R26,R30
00028a 91e0 00e4 	LDS  R30,_x
00028c 91f0 00e5 	LDS  R31,_x+1
00028e 17ea      	CP   R30,R26
00028f 07fb      	CPC  R31,R27
000290 f529      	BRNE _0x8C
                 ; 0000 01ED switch(y){
000291 91e0 00e6 	LDS  R30,_y
000293 91f0 00e7 	LDS  R31,_y+1
                 ; 0000 01EE case 0:
000295 9730      	SBIW R30,0
000296 f411      	BRNE _0x90
                 ; 0000 01EF PORTD &=0x7f;
000297 9897      	CBI  0x12,7
                 ; 0000 01F0 break;
000298 c01d      	RJMP _0x8F
                 ; 0000 01F1 case 1:
                 _0x90:
000299 d1f0      	RCALL SUBOPT_0x1F
00029a f411      	BRNE _0x91
                 ; 0000 01F2 PORTD &=0xbf;
00029b 9896      	CBI  0x12,6
                 ; 0000 01F3 break;
00029c c019      	RJMP _0x8F
                 ; 0000 01F4 case 2:
                 _0x91:
00029d d20f      	RCALL SUBOPT_0x25
00029e f411      	BRNE _0x92
                 ; 0000 01F5 PORTD &=0xdf;
00029f 9895      	CBI  0x12,5
                 ; 0000 01F6 break;
0002a0 c015      	RJMP _0x8F
                 ; 0000 01F7 case 3:
                 _0x92:
0002a1 d221      	RCALL SUBOPT_0x29
0002a2 f411      	BRNE _0x93
                 ; 0000 01F8 PORTD &=0xef;
0002a3 9894      	CBI  0x12,4
                 ; 0000 01F9 break;
0002a4 c011      	RJMP _0x8F
                 ; 0000 01FA case 4:
                 _0x93:
0002a5 30e4      	CPI  R30,LOW(0x4)
0002a6 e0a0      	LDI  R26,HIGH(0x4)
0002a7 07fa      	CPC  R31,R26
0002a8 f411      	BRNE _0x94
                 ; 0000 01FB PORTD &=0xf7;
0002a9 9893      	CBI  0x12,3
                 ; 0000 01FC break;
0002aa c00b      	RJMP _0x8F
                 ; 0000 01FD case 5:
                 _0x94:
0002ab 30e5      	CPI  R30,LOW(0x5)
0002ac e0a0      	LDI  R26,HIGH(0x5)
0002ad 07fa      	CPC  R31,R26
0002ae f411      	BRNE _0x95
                 ; 0000 01FE PORTD &=0xfd;
0002af 9891      	CBI  0x12,1
                 ; 0000 01FF break;
0002b0 c005      	RJMP _0x8F
                 ; 0000 0200 case 6:
                 _0x95:
0002b1 30e6      	CPI  R30,LOW(0x6)
0002b2 e0a0      	LDI  R26,HIGH(0x6)
0002b3 07fa      	CPC  R31,R26
0002b4 f409      	BRNE _0x97
                 ; 0000 0201 PORTD &=0xfe;
0002b5 9890      	CBI  0x12,0
                 ; 0000 0202 break;
                 ; 0000 0203 default:
                 _0x97:
                 ; 0000 0204 break;
                 ; 0000 0205 }
                 _0x8F:
                 ; 0000 0206 }
                 ; 0000 0207 //
                 ; 0000 0208 switch((cols%5)){
                 _0x8C:
0002b6 d223      	RCALL SUBOPT_0x2E
                 ; 0000 0209 case 0:
0002b7 9730      	SBIW R30,0
0002b8 f451      	BRNE _0x9B
                 ; 0000 020A if(barra1==0){
0002b9 d135      	RCALL SUBOPT_0x2
0002ba 9730      	SBIW R30,0
0002bb f409      	BRNE _0x9C
                 ; 0000 020B PORTD &=0xfe;
0002bc 9890      	CBI  0x12,0
                 ; 0000 020C }
                 ; 0000 020D if(barra2==0){
                 _0x9C:
0002bd d14c      	RCALL SUBOPT_0x8
0002be 9730      	SBIW R30,0
0002bf f409      	BRNE _0x9D
                 ; 0000 020E PORTD &=0x7f;
0002c0 9897      	CBI  0x12,7
                 ; 0000 020F }
                 ; 0000 0210 PORTC |=0x01;
                 _0x9D:
0002c1 9aa8      	SBI  0x15,0
                 ; 0000 0211 break;
0002c2 c049      	RJMP _0x9A
                 ; 0000 0212 case 1:
                 _0x9B:
0002c3 d1c6      	RCALL SUBOPT_0x1F
0002c4 f491      	BRNE _0x9E
                 ; 0000 0213 if(barra1==0){
0002c5 d129      	RCALL SUBOPT_0x2
0002c6 9730      	SBIW R30,0
0002c7 f409      	BRNE _0x9F
                 ; 0000 0214 PORTD &=0xfe;
0002c8 9890      	CBI  0x12,0
                 ; 0000 0215 }
                 ; 0000 0216 if(barra2==0){
                 _0x9F:
0002c9 d140      	RCALL SUBOPT_0x8
0002ca 9730      	SBIW R30,0
0002cb f409      	BRNE _0xA0
                 ; 0000 0217 PORTD &=0x7f;
0002cc 9897      	CBI  0x12,7
                 ; 0000 0218 }
                 ; 0000 0219 if(barra1==1){
                 _0xA0:
0002cd d121      	RCALL SUBOPT_0x2
0002ce d1bb      	RCALL SUBOPT_0x1F
0002cf f409      	BRNE _0xA1
                 ; 0000 021A PORTD &=0xfe;
0002d0 9890      	CBI  0x12,0
                 ; 0000 021B }
                 ; 0000 021C if(barra2==1){
                 _0xA1:
0002d1 d138      	RCALL SUBOPT_0x8
0002d2 d1b7      	RCALL SUBOPT_0x1F
0002d3 f409      	BRNE _0xA2
                 ; 0000 021D PORTD &=0x7f;
0002d4 9897      	CBI  0x12,7
                 ; 0000 021E }
                 ; 0000 021F PORTC |=0x02;
                 _0xA2:
0002d5 9aa9      	SBI  0x15,1
                 ; 0000 0220 break;
0002d6 c035      	RJMP _0x9A
                 ; 0000 0221 case 2:
                 _0x9E:
0002d7 d1d5      	RCALL SUBOPT_0x25
0002d8 f491      	BRNE _0xA3
                 ; 0000 0222 if(barra1==1){
0002d9 d115      	RCALL SUBOPT_0x2
0002da d1af      	RCALL SUBOPT_0x1F
0002db f409      	BRNE _0xA4
                 ; 0000 0223 PORTD &=0xfe;
0002dc 9890      	CBI  0x12,0
                 ; 0000 0224 }
                 ; 0000 0225 if(barra2==1){
                 _0xA4:
0002dd d12c      	RCALL SUBOPT_0x8
0002de d1ab      	RCALL SUBOPT_0x1F
0002df f409      	BRNE _0xA5
                 ; 0000 0226 PORTD &=0x7f;
0002e0 9897      	CBI  0x12,7
                 ; 0000 0227 }
                 ; 0000 0228 if(barra1==2){
                 _0xA5:
0002e1 d10d      	RCALL SUBOPT_0x2
0002e2 d1ca      	RCALL SUBOPT_0x25
0002e3 f409      	BRNE _0xA6
                 ; 0000 0229 PORTD &=0xfe;
0002e4 9890      	CBI  0x12,0
                 ; 0000 022A }
                 ; 0000 022B if(barra2==2){
                 _0xA6:
0002e5 d124      	RCALL SUBOPT_0x8
0002e6 d1c6      	RCALL SUBOPT_0x25
0002e7 f409      	BRNE _0xA7
                 ; 0000 022C PORTD &=0x7f;
0002e8 9897      	CBI  0x12,7
                 ; 0000 022D }
                 ; 0000 022E PORTC |=0x04;
                 _0xA7:
0002e9 9aaa      	SBI  0x15,2
                 ; 0000 022F break;
0002ea c021      	RJMP _0x9A
                 ; 0000 0230 case 3:
                 _0xA3:
0002eb d1d7      	RCALL SUBOPT_0x29
0002ec f491      	BRNE _0xA8
                 ; 0000 0231 if(barra1==2){
0002ed d101      	RCALL SUBOPT_0x2
0002ee d1be      	RCALL SUBOPT_0x25
0002ef f409      	BRNE _0xA9
                 ; 0000 0232 PORTD &=0xfe;
0002f0 9890      	CBI  0x12,0
                 ; 0000 0233 }
                 ; 0000 0234 if(barra2==2){
                 _0xA9:
0002f1 d118      	RCALL SUBOPT_0x8
0002f2 d1ba      	RCALL SUBOPT_0x25
0002f3 f409      	BRNE _0xAA
                 ; 0000 0235 PORTD &=0x7f;
0002f4 9897      	CBI  0x12,7
                 ; 0000 0236 }
                 ; 0000 0237 if(barra1==3){
                 _0xAA:
0002f5 d0f9      	RCALL SUBOPT_0x2
0002f6 d1cc      	RCALL SUBOPT_0x29
0002f7 f409      	BRNE _0xAB
                 ; 0000 0238 PORTD &=0xfe;
0002f8 9890      	CBI  0x12,0
                 ; 0000 0239 }
                 ; 0000 023A if(barra2==3){
                 _0xAB:
0002f9 d110      	RCALL SUBOPT_0x8
0002fa d1c8      	RCALL SUBOPT_0x29
0002fb f409      	BRNE _0xAC
                 ; 0000 023B PORTD &=0x7f;
0002fc 9897      	CBI  0x12,7
                 ; 0000 023C }
                 ; 0000 023D PORTC |=0x08;
                 _0xAC:
0002fd 9aab      	SBI  0x15,3
                 ; 0000 023E break;
0002fe c00d      	RJMP _0x9A
                 ; 0000 023F case 4:
                 _0xA8:
0002ff 30e4      	CPI  R30,LOW(0x4)
000300 e0a0      	LDI  R26,HIGH(0x4)
000301 07fa      	CPC  R31,R26
000302 f449      	BRNE _0xB0
                 ; 0000 0240 if(barra1==3){
000303 d0eb      	RCALL SUBOPT_0x2
000304 d1be      	RCALL SUBOPT_0x29
000305 f409      	BRNE _0xAE
                 ; 0000 0241 PORTD &=0xfe;
000306 9890      	CBI  0x12,0
                 ; 0000 0242 }
                 ; 0000 0243 if(barra2==3){
                 _0xAE:
000307 d102      	RCALL SUBOPT_0x8
000308 d1ba      	RCALL SUBOPT_0x29
000309 f409      	BRNE _0xAF
                 ; 0000 0244 PORTD &=0x7f;
00030a 9897      	CBI  0x12,7
                 ; 0000 0245 }
                 ; 0000 0246 PORTC |=0x10;
                 _0xAF:
00030b 9aac      	SBI  0x15,4
                 ; 0000 0247 break;
                 ; 0000 0248 default:
                 _0xB0:
                 ; 0000 0249 break;
                 ; 0000 024A }
                 _0x9A:
                 ; 0000 024B //
                 ; 0000 024C if(y<0 || y>6){
00030c 91a0 00e7 	LDS  R26,_y+1
00030e 23aa      	TST  R26
00030f f022      	BRMI _0xB2
000310 d174      	RCALL SUBOPT_0x1E
000311 9717      	SBIW R26,7
000312 f40c      	BRGE _0xB2
000313 c0c8      	RJMP _0xB1
                 _0xB2:
                 ; 0000 024D PORTD |=0xfb;
000314 d1be      	RCALL SUBOPT_0x2D
                 ; 0000 024E PORTC &=0xe0;
                 ; 0000 024F if(y>6){
000315 d16f      	RCALL SUBOPT_0x1E
000316 9717      	SBIW R26,7
000317 f07c      	BRLT _0xB4
                 ; 0000 0250 puntos2++;
000318 01f6      	MOVW R30,R12
000319 9631      	ADIW R30,1
00031a 016f      	MOVW R12,R30
                 ; 0000 0251 if(puntos2>9){
00031b e0e9      	LDI  R30,LOW(9)
00031c e0f0      	LDI  R31,HIGH(9)
00031d d1c1      	RCALL SUBOPT_0x2F
00031e f40c      	BRGE _0xB5
                 ; 0000 0252 win=1;
00031f d1c2      	RCALL SUBOPT_0x30
                 ; 0000 0253 }
                 ; 0000 0254 //redefinir direccion
                 ; 0000 0255 rand*=7;
                 _0xB5:
000320 01f2      	MOVW R30,R4
000321 d0f1      	RCALL SUBOPT_0xB
000322 d1c5      	RCALL SUBOPT_0x31
                 ; 0000 0256 rand=rand%11;
000323 d0f8      	RCALL SUBOPT_0xD
                 ; 0000 0257 direccion=rand%2;
000324 e0a1      	LDI  R26,LOW(1)
000325 e0b0      	LDI  R27,HIGH(1)
000326 d0f7      	RCALL SUBOPT_0xE
                 ; 0000 0258 
                 ; 0000 0259 }
                 ; 0000 025A if(y<0){
                 _0xB4:
000327 91a0 00e7 	LDS  R26,_y+1
000329 23aa      	TST  R26
00032a f4a2      	BRPL _0xB6
                 ; 0000 025B puntos1++;
00032b 01f5      	MOVW R30,R10
00032c 9631      	ADIW R30,1
00032d 015f      	MOVW R10,R30
                 ; 0000 025C if(puntos1>9){
00032e e0e9      	LDI  R30,LOW(9)
00032f e0f0      	LDI  R31,HIGH(9)
000330 d1bd      	RCALL SUBOPT_0x32
000331 f40c      	BRGE _0xB7
                 ; 0000 025D win=1;
000332 d1af      	RCALL SUBOPT_0x30
                 ; 0000 025E }
                 ; 0000 025F //redefinir direccion
                 ; 0000 0260 rand*=7;
                 _0xB7:
000333 01f2      	MOVW R30,R4
000334 d0de      	RCALL SUBOPT_0xB
000335 d1b2      	RCALL SUBOPT_0x31
                 ; 0000 0261 rand=rand%11;
000336 012f      	MOVW R4,R30
                 ; 0000 0262 direccion=(rand%2)+2;
000337 01d2      	MOVW R26,R4
000338 d0eb      	RCALL SUBOPT_0xF
000339 d1f2      	RCALL __MODW21
00033a 9632      	ADIW R30,2
00033b 93e0 00e8 	STS  _direccion,R30
00033d 93f0 00e9 	STS  _direccion+1,R31
                 ; 0000 0263 
                 ; 0000 0264 }
                 ; 0000 0265 //redefinir x
                 ; 0000 0266 rand*=19;
                 _0xB6:
00033f 01f2      	MOVW R30,R4
000340 e1a3      	LDI  R26,LOW(19)
000341 e0b0      	LDI  R27,HIGH(19)
000342 d1d1      	RCALL __MULW12
000343 d0d8      	RCALL SUBOPT_0xD
                 ; 0000 0267 rand+=7;
000344 9637      	ADIW R30,7
000345 012f      	MOVW R4,R30
                 ; 0000 0268 x=1+(rand%3);
000346 01d2      	MOVW R26,R4
000347 e0e3      	LDI  R30,LOW(3)
000348 e0f0      	LDI  R31,HIGH(3)
000349 d1e2      	RCALL __MODW21
00034a 9631      	ADIW R30,1
00034b d0db      	RCALL SUBOPT_0x10
                 ; 0000 0269 //redefinir y
                 ; 0000 026A y=3;
                 ; 0000 026B //
                 ; 0000 026C if(puntos1>8 && puntos2>8){
00034c e0e8      	LDI  R30,LOW(8)
00034d e0f0      	LDI  R31,HIGH(8)
00034e d19f      	RCALL SUBOPT_0x32
00034f f424      	BRGE _0xB9
000350 e0e8      	LDI  R30,LOW(8)
000351 e0f0      	LDI  R31,HIGH(8)
000352 d18c      	RCALL SUBOPT_0x2F
000353 f00c      	BRLT _0xBA
                 _0xB9:
000354 c007      	RJMP _0xB8
                 _0xBA:
                 ; 0000 026D rapidez2=(float)(rapidez1);
000355 d0e6      	RCALL SUBOPT_0x13
                 ; 0000 026E rapidez2=rapidez2*33/100;
000356 d19a      	RCALL SUBOPT_0x33
                +
000357 e0e0     +LDI R30 , LOW ( 0x42040000 )
000358 e0f0     +LDI R31 , HIGH ( 0x42040000 )
000359 e064     +LDI R22 , BYTE3 ( 0x42040000 )
00035a e472     +LDI R23 , BYTE4 ( 0x42040000 )
                 	__GETD1N 0x42040000
00035b c06b      	RJMP _0xDA
                 ; 0000 026F rapidez=(int)(rapidez2);
                 ; 0000 0270 }else if(puntos1>7 && puntos2>7){
                 _0xB8:
00035c e0e7      	LDI  R30,LOW(7)
00035d e0f0      	LDI  R31,HIGH(7)
00035e d18f      	RCALL SUBOPT_0x32
00035f f424      	BRGE _0xBD
000360 e0e7      	LDI  R30,LOW(7)
000361 e0f0      	LDI  R31,HIGH(7)
000362 d17c      	RCALL SUBOPT_0x2F
000363 f00c      	BRLT _0xBE
                 _0xBD:
000364 c007      	RJMP _0xBC
                 _0xBE:
                 ; 0000 0271 rapidez2=(float)(rapidez1);
000365 d0d6      	RCALL SUBOPT_0x13
                 ; 0000 0272 rapidez2=rapidez2*39/100;
000366 d18a      	RCALL SUBOPT_0x33
                +
000367 e0e0     +LDI R30 , LOW ( 0x421C0000 )
000368 e0f0     +LDI R31 , HIGH ( 0x421C0000 )
000369 e16c     +LDI R22 , BYTE3 ( 0x421C0000 )
00036a e472     +LDI R23 , BYTE4 ( 0x421C0000 )
                 	__GETD1N 0x421C0000
00036b c05b      	RJMP _0xDA
                 ; 0000 0273 rapidez=(int)(rapidez2);
                 ; 0000 0274 }else if(puntos1>6 && puntos2>6){
                 _0xBC:
00036c e0e6      	LDI  R30,LOW(6)
00036d e0f0      	LDI  R31,HIGH(6)
00036e d17f      	RCALL SUBOPT_0x32
00036f f424      	BRGE _0xC1
000370 e0e6      	LDI  R30,LOW(6)
000371 e0f0      	LDI  R31,HIGH(6)
000372 d16c      	RCALL SUBOPT_0x2F
000373 f00c      	BRLT _0xC2
                 _0xC1:
000374 c007      	RJMP _0xC0
                 _0xC2:
                 ; 0000 0275 rapidez2=(float)(rapidez1);
000375 d0c6      	RCALL SUBOPT_0x13
                 ; 0000 0276 rapidez2=rapidez2*41/100;
000376 d17a      	RCALL SUBOPT_0x33
                +
000377 e0e0     +LDI R30 , LOW ( 0x42240000 )
000378 e0f0     +LDI R31 , HIGH ( 0x42240000 )
000379 e264     +LDI R22 , BYTE3 ( 0x42240000 )
00037a e472     +LDI R23 , BYTE4 ( 0x42240000 )
                 	__GETD1N 0x42240000
00037b c04b      	RJMP _0xDA
                 ; 0000 0277 rapidez=(int)(rapidez2);
                 ; 0000 0278 }else if(puntos1>5 && puntos2>5){
                 _0xC0:
00037c e0e5      	LDI  R30,LOW(5)
00037d e0f0      	LDI  R31,HIGH(5)
00037e d16f      	RCALL SUBOPT_0x32
00037f f424      	BRGE _0xC5
000380 e0e5      	LDI  R30,LOW(5)
000381 e0f0      	LDI  R31,HIGH(5)
000382 d15c      	RCALL SUBOPT_0x2F
000383 f00c      	BRLT _0xC6
                 _0xC5:
000384 c007      	RJMP _0xC4
                 _0xC6:
                 ; 0000 0279 rapidez2=(float)(rapidez1);
000385 d0b6      	RCALL SUBOPT_0x13
                 ; 0000 027A rapidez2=rapidez2*53/100;
000386 d16a      	RCALL SUBOPT_0x33
                +
000387 e0e0     +LDI R30 , LOW ( 0x42540000 )
000388 e0f0     +LDI R31 , HIGH ( 0x42540000 )
000389 e564     +LDI R22 , BYTE3 ( 0x42540000 )
00038a e472     +LDI R23 , BYTE4 ( 0x42540000 )
                 	__GETD1N 0x42540000
00038b c03b      	RJMP _0xDA
                 ; 0000 027B rapidez=(int)(rapidez2);
                 ; 0000 027C }else if(puntos1>4 && puntos2>4){
                 _0xC4:
00038c e0e4      	LDI  R30,LOW(4)
00038d e0f0      	LDI  R31,HIGH(4)
00038e d15f      	RCALL SUBOPT_0x32
00038f f424      	BRGE _0xC9
000390 e0e4      	LDI  R30,LOW(4)
000391 e0f0      	LDI  R31,HIGH(4)
000392 d14c      	RCALL SUBOPT_0x2F
000393 f00c      	BRLT _0xCA
                 _0xC9:
000394 c007      	RJMP _0xC8
                 _0xCA:
                 ; 0000 027D rapidez2=(float)(rapidez1);
000395 d0a6      	RCALL SUBOPT_0x13
                 ; 0000 027E rapidez2=rapidez2*63/100;
000396 d15a      	RCALL SUBOPT_0x33
                +
000397 e0e0     +LDI R30 , LOW ( 0x427C0000 )
000398 e0f0     +LDI R31 , HIGH ( 0x427C0000 )
000399 e76c     +LDI R22 , BYTE3 ( 0x427C0000 )
00039a e472     +LDI R23 , BYTE4 ( 0x427C0000 )
                 	__GETD1N 0x427C0000
00039b c02b      	RJMP _0xDA
                 ; 0000 027F rapidez=(int)(rapidez2);
                 ; 0000 0280 }else if(puntos1>3 && puntos2>3){
                 _0xC8:
00039c e0e3      	LDI  R30,LOW(3)
00039d e0f0      	LDI  R31,HIGH(3)
00039e d14f      	RCALL SUBOPT_0x32
00039f f424      	BRGE _0xCD
0003a0 e0e3      	LDI  R30,LOW(3)
0003a1 e0f0      	LDI  R31,HIGH(3)
0003a2 d13c      	RCALL SUBOPT_0x2F
0003a3 f00c      	BRLT _0xCE
                 _0xCD:
0003a4 c007      	RJMP _0xCC
                 _0xCE:
                 ; 0000 0281 rapidez2=(float)(rapidez1);
0003a5 d096      	RCALL SUBOPT_0x13
                 ; 0000 0282 rapidez2=rapidez2*73/100;
0003a6 d14a      	RCALL SUBOPT_0x33
                +
0003a7 e0e0     +LDI R30 , LOW ( 0x42920000 )
0003a8 e0f0     +LDI R31 , HIGH ( 0x42920000 )
0003a9 e962     +LDI R22 , BYTE3 ( 0x42920000 )
0003aa e472     +LDI R23 , BYTE4 ( 0x42920000 )
                 	__GETD1N 0x42920000
0003ab c01b      	RJMP _0xDA
                 ; 0000 0283 rapidez=(int)(rapidez2);
                 ; 0000 0284 }else if(puntos1>2 && puntos2>2){
                 _0xCC:
0003ac d077      	RCALL SUBOPT_0xF
0003ad d140      	RCALL SUBOPT_0x32
0003ae f41c      	BRGE _0xD1
0003af d074      	RCALL SUBOPT_0xF
0003b0 d12e      	RCALL SUBOPT_0x2F
0003b1 f00c      	BRLT _0xD2
                 _0xD1:
0003b2 c007      	RJMP _0xD0
                 _0xD2:
                 ; 0000 0285 rapidez2=(float)(rapidez1);
0003b3 d088      	RCALL SUBOPT_0x13
                 ; 0000 0286 rapidez2=rapidez2*83/100;
0003b4 d13c      	RCALL SUBOPT_0x33
                +
0003b5 e0e0     +LDI R30 , LOW ( 0x42A60000 )
0003b6 e0f0     +LDI R31 , HIGH ( 0x42A60000 )
0003b7 ea66     +LDI R22 , BYTE3 ( 0x42A60000 )
0003b8 e472     +LDI R23 , BYTE4 ( 0x42A60000 )
                 	__GETD1N 0x42A60000
0003b9 c00d      	RJMP _0xDA
                 ; 0000 0287 rapidez=(int)(rapidez2);
                 ; 0000 0288 }else if(puntos1>1 && puntos2>1){
                 _0xD0:
0003ba d055      	RCALL SUBOPT_0xA
0003bb d132      	RCALL SUBOPT_0x32
0003bc f41c      	BRGE _0xD5
0003bd d052      	RCALL SUBOPT_0xA
0003be d120      	RCALL SUBOPT_0x2F
0003bf f00c      	BRLT _0xD6
                 _0xD5:
0003c0 c018      	RJMP _0xD4
                 _0xD6:
                 ; 0000 0289 rapidez2=(float)(rapidez1);
0003c1 d07a      	RCALL SUBOPT_0x13
                 ; 0000 028A rapidez2=rapidez2*93/100;
0003c2 d12e      	RCALL SUBOPT_0x33
                +
0003c3 e0e0     +LDI R30 , LOW ( 0x42BA0000 )
0003c4 e0f0     +LDI R31 , HIGH ( 0x42BA0000 )
0003c5 eb6a     +LDI R22 , BYTE3 ( 0x42BA0000 )
0003c6 e472     +LDI R23 , BYTE4 ( 0x42BA0000 )
                 	__GETD1N 0x42BA0000
                 _0xDA:
0003c7 d246      	RCALL __MULF12
0003c8 01df      	MOVW R26,R30
0003c9 01cb      	MOVW R24,R22
                +
0003ca e0e0     +LDI R30 , LOW ( 0x42C80000 )
0003cb e0f0     +LDI R31 , HIGH ( 0x42C80000 )
0003cc ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
0003cd e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
0003ce d28d      	RCALL __DIVF21
0003cf 93e0 00f8 	STS  _rapidez2,R30
0003d1 93f0 00f9 	STS  _rapidez2+1,R31
0003d3 9360 00fa 	STS  _rapidez2+2,R22
0003d5 9370 00fb 	STS  _rapidez2+3,R23
                 ; 0000 028B rapidez=(int)(rapidez2);
0003d7 d1d2      	RCALL __CFD1
0003d8 d05e      	RCALL SUBOPT_0x12
                 ; 0000 028C }
                 ; 0000 028D delay_ms(200);
                 _0xD4:
0003d9 eca8      	LDI  R26,LOW(200)
0003da e0b0      	LDI  R27,0
0003db d2c4      	RCALL _delay_ms
                 ; 0000 028E }
                 ; 0000 028F //
                 ; 0000 0290 //
                 ; 0000 0291 }
                 _0xB1:
                 ; 0000 0292 }
                 _0x1B:
0003dc cd5c      	RJMP _0x18
                 ; 0000 0293 }
                 _0xD7:
0003dd cfff      	RJMP _0xD7
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.ESEG
                 _random:
000000           	.BYTE 0x2
                 _barra1:
000002           	.BYTE 0x2
                 _barra2:
000004           	.BYTE 0x2
                 
                 	.DSEG
                 _i:
0000e0           	.BYTE 0x2
                 _j:
0000e2           	.BYTE 0x2
                 _x:
0000e4           	.BYTE 0x2
                 _y:
0000e6           	.BYTE 0x2
                 _direccion:
0000e8           	.BYTE 0x2
                 _dsplz:
0000ea           	.BYTE 0x2
                 _stay:
0000ec           	.BYTE 0x2
                 _cols:
0000ee           	.BYTE 0x2
                 _inst:
0000f0           	.BYTE 0x2
                 _win:
0000f2           	.BYTE 0x2
                 _rapidez:
0000f4           	.BYTE 0x2
                 _rapidez1:
0000f6           	.BYTE 0x2
                 _rapidez2:
0000f8           	.BYTE 0x4
                 _gan1:
0000fc           	.BYTE 0x2
                 _gan2:
0000fe           	.BYTE 0x2
                 _gan3:
000100           	.BYTE 0x2
                 _gan4:
000102           	.BYTE 0x2
                 _tabla7segmentos:
000104           	.BYTE 0x14
                 __base_y_G100:
000118           	.BYTE 0x4
                 __lcd_x:
00011c           	.BYTE 0x1
                 __lcd_y:
00011d           	.BYTE 0x1
                 __lcd_maxx:
00011e           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
0003de 938a      	ST   -Y,R24
0003df 939a      	ST   -Y,R25
0003e0 93aa      	ST   -Y,R26
0003e1 93ba      	ST   -Y,R27
0003e2 93ea      	ST   -Y,R30
0003e3 93fa      	ST   -Y,R31
0003e4 b7ef      	IN   R30,SREG
0003e5 93ea      	ST   -Y,R30
0003e6 e1e4      	LDI  R30,LOW(20)
0003e7 e0f0      	LDI  R31,HIGH(20)
0003e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1:
0003e9 91e0 00f0 	LDS  R30,_inst
0003eb 91f0 00f1 	LDS  R31,_inst+1
0003ed 9730      	SBIW R30,0
0003ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2:
0003ef e0a2      	LDI  R26,LOW(_barra1)
0003f0 e0b0      	LDI  R27,HIGH(_barra1)
0003f1 d160      	RCALL __EEPROMRDW
0003f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
0003f3 e0e3      	LDI  R30,LOW(3)
0003f4 e0f0      	LDI  R31,HIGH(3)
0003f5 d16c      	RCALL __EEPROMWRW
0003f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0003f7 e0a3      	LDI  R26,LOW(_barra1+1)
0003f8 e0b0      	LDI  R27,HIGH(_barra1+1)
0003f9 d15c      	RCALL __EEPROMRDB
0003fa 23ee      	TST  R30
0003fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
0003fc e0a2      	LDI  R26,LOW(_barra1)
0003fd e0b0      	LDI  R27,HIGH(_barra1)
0003fe e0e0      	LDI  R30,LOW(0)
0003ff e0f0      	LDI  R31,HIGH(0)
000400 d161      	RCALL __EEPROMWRW
000401 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:20 WORDS
                 SUBOPT_0x6:
000402 e0a4      	LDI  R26,LOW(_barra2)
000403 e0b0      	LDI  R27,HIGH(_barra2)
000404 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000405 e0a5      	LDI  R26,LOW(_barra2+1)
000406 e0b0      	LDI  R27,HIGH(_barra2+1)
000407 d14e      	RCALL __EEPROMRDB
000408 23ee      	TST  R30
000409 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x8:
00040a dff7      	RCALL SUBOPT_0x6
00040b d146      	RCALL __EEPROMRDW
00040c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x9:
00040d e0a0      	LDI  R26,LOW(_random)
00040e e0b0      	LDI  R27,HIGH(_random)
00040f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA:
000410 e0e1      	LDI  R30,LOW(1)
000411 e0f0      	LDI  R31,HIGH(1)
000412 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xB:
000413 e0a7      	LDI  R26,LOW(7)
000414 e0b0      	LDI  R27,HIGH(7)
000415 d0fe      	RCALL __MULW12
000416 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000417 dff5      	RCALL SUBOPT_0x9
000418 d149      	RCALL __EEPROMWRW
000419 dff3      	RCALL SUBOPT_0x9
00041a d137      	RCALL __EEPROMRDW
00041b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
00041c 012f      	MOVW R4,R30
00041d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
00041e d11b      	RCALL __MANDW12
00041f 93e0 00e8 	STS  _direccion,R30
000421 93f0 00e9 	STS  _direccion+1,R31
000423 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF:
000424 e0e2      	LDI  R30,LOW(2)
000425 e0f0      	LDI  R31,HIGH(2)
000426 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x10:
000427 93e0 00e4 	STS  _x,R30
000429 93f0 00e5 	STS  _x+1,R31
00042b e0e3      	LDI  R30,LOW(3)
00042c e0f0      	LDI  R31,HIGH(3)
00042d 93e0 00e6 	STS  _y,R30
00042f 93f0 00e7 	STS  _y+1,R31
000431 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x11:
000432 91e0 00f6 	LDS  R30,_rapidez1
000434 91f0 00f7 	LDS  R31,_rapidez1+1
000436 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000437 93e0 00f4 	STS  _rapidez,R30
000439 93f0 00f5 	STS  _rapidez+1,R31
00043b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:102 WORDS
                 SUBOPT_0x13:
00043c dff5      	RCALL SUBOPT_0x11
                +
00043d 2f6f     +MOV R22 , R31
00043e 0f66     +ADD R22 , R22
00043f 0b66     +SBC R22 , R22
000440 2f76     +MOV R23 , R22
                 	__CWD1
000441 d19f      	RCALL __CDF1
000442 93e0 00f8 	STS  _rapidez2,R30
000444 93f0 00f9 	STS  _rapidez2+1,R31
000446 9360 00fa 	STS  _rapidez2+2,R22
000448 9370 00fb 	STS  _rapidez2+3,R23
00044a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
00044b e0e0      	LDI  R30,LOW(0)
00044c 93e0 00ea 	STS  _dsplz,R30
00044e 93e0 00eb 	STS  _dsplz+1,R30
000450 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x15:
000451 e0e0      	LDI  R30,LOW(0)
000452 93e0 00ec 	STS  _stay,R30
000454 93e0 00ed 	STS  _stay+1,R30
000456 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
000457 e0e0      	LDI  R30,LOW(0)
000458 93e0 00ee 	STS  _cols,R30
00045a 93e0 00ef 	STS  _cols+1,R30
00045c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
00045d e0e0      	LDI  R30,LOW(0)
00045e 93e0 00f0 	STS  _inst,R30
000460 93e0 00f1 	STS  _inst+1,R30
000462 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x18:
000463 91ed      	LD   R30,X+
000464 91fd      	LD   R31,X+
000465 9631      	ADIW R30,1
000466 93fe      	ST   -X,R31
000467 93ee      	ST   -X,R30
000468 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x19:
000469 91a0 00ee 	LDS  R26,_cols
00046b 91b0 00ef 	LDS  R27,_cols+1
00046d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1A:
00046e 91a0 00f0 	LDS  R26,_inst
000470 91b0 00f1 	LDS  R27,_inst+1
000472 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B:
000473 dffa      	RCALL SUBOPT_0x1A
000474 e0ea      	LDI  R30,LOW(10)
000475 d098      	RCALL __MULB1W2U
000476 5fec      	SUBI R30,LOW(-_tabla7segmentos)
000477 4ffe      	SBCI R31,HIGH(-_tabla7segmentos)
000478 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1C:
000479 91e0 00e8 	LDS  R30,_direccion
00047b 91f0 00e9 	LDS  R31,_direccion+1
00047d 9730      	SBIW R30,0
00047e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:26 WORDS
                 SUBOPT_0x1D:
00047f 91a0 00e4 	LDS  R26,_x
000481 91b0 00e5 	LDS  R27,_x+1
000483 9711      	SBIW R26,1
000484 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x1E:
000485 91a0 00e6 	LDS  R26,_y
000487 91b0 00e7 	LDS  R27,_y+1
000489 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x1F:
00048a 30e1      	CPI  R30,LOW(0x1)
00048b e0a0      	LDI  R26,HIGH(0x1)
00048c 07fa      	CPC  R31,R26
00048d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x20:
00048e df81      	RCALL SUBOPT_0xA
00048f 93e0 00e8 	STS  _direccion,R30
000491 93f0 00e9 	STS  _direccion+1,R31
000493 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x21:
000494 e0e3      	LDI  R30,LOW(3)
000495 e0f0      	LDI  R31,HIGH(3)
000496 93e0 00e8 	STS  _direccion,R30
000498 93f0 00e9 	STS  _direccion+1,R31
00049a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:26 WORDS
                 SUBOPT_0x22:
00049b 91a0 00e4 	LDS  R26,_x
00049d 91b0 00e5 	LDS  R27,_x+1
00049f 9712      	SBIW R26,2
0004a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x23:
0004a1 df82      	RCALL SUBOPT_0xF
0004a2 93e0 00e8 	STS  _direccion,R30
0004a4 93f0 00e9 	STS  _direccion+1,R31
0004a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x24:
0004a7 91a0 00e4 	LDS  R26,_x
0004a9 91b0 00e5 	LDS  R27,_x+1
0004ab 9713      	SBIW R26,3
0004ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:20 WORDS
                 SUBOPT_0x25:
0004ad 30e2      	CPI  R30,LOW(0x2)
0004ae e0a0      	LDI  R26,HIGH(0x2)
0004af 07fa      	CPC  R31,R26
0004b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
0004b1 91a0 00e4 	LDS  R26,_x
0004b3 91b0 00e5 	LDS  R27,_x+1
0004b5 9611      	ADIW R26,1
0004b6 9715      	SBIW R26,5
0004b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
0004b8 01fd      	MOVW R30,R26
0004b9 30e3      	CPI  R30,LOW(0x3)
0004ba e0a0      	LDI  R26,HIGH(0x3)
0004bb 07fa      	CPC  R31,R26
0004bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:26 WORDS
                 SUBOPT_0x28:
0004bd e0e0      	LDI  R30,LOW(0)
0004be 93e0 00e8 	STS  _direccion,R30
0004c0 93e0 00e9 	STS  _direccion+1,R30
0004c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x29:
0004c3 30e3      	CPI  R30,LOW(0x3)
0004c4 e0a0      	LDI  R26,HIGH(0x3)
0004c5 07fa      	CPC  R31,R26
0004c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2A:
0004c7 dfbd      	RCALL SUBOPT_0x1E
0004c8 9715      	SBIW R26,5
0004c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
0004ca eea4      	LDI  R26,LOW(_x)
0004cb e0b0      	LDI  R27,HIGH(_x)
0004cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2C:
0004cd 91ed      	LD   R30,X+
0004ce 91fd      	LD   R31,X+
0004cf 9731      	SBIW R30,1
0004d0 93fe      	ST   -X,R31
0004d1 93ee      	ST   -X,R30
0004d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
0004d3 b3e2      	IN   R30,0x12
0004d4 6feb      	ORI  R30,LOW(0xFB)
0004d5 bbe2      	OUT  0x12,R30
0004d6 b3e5      	IN   R30,0x15
0004d7 7ee0      	ANDI R30,LOW(0xE0)
0004d8 bbe5      	OUT  0x15,R30
0004d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
0004da df8e      	RCALL SUBOPT_0x19
0004db e0e5      	LDI  R30,LOW(5)
0004dc e0f0      	LDI  R31,HIGH(5)
0004dd d04e      	RCALL __MODW21
0004de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2F:
0004df 15ec      	CP   R30,R12
0004e0 05fd      	CPC  R31,R13
0004e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x30:
0004e2 df2d      	RCALL SUBOPT_0xA
0004e3 93e0 00f2 	STS  _win,R30
0004e5 93f0 00f3 	STS  _win+1,R31
0004e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31:
0004e8 012f      	MOVW R4,R30
0004e9 01d2      	MOVW R26,R4
0004ea e0eb      	LDI  R30,LOW(11)
0004eb e0f0      	LDI  R31,HIGH(11)
0004ec d03f      	RCALL __MODW21
0004ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x32:
0004ee 15ea      	CP   R30,R10
0004ef 05fb      	CPC  R31,R11
0004f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x33:
0004f1 91a0 00f8 	LDS  R26,_rapidez2
0004f3 91b0 00f9 	LDS  R27,_rapidez2+1
0004f5 9180 00fa 	LDS  R24,_rapidez2+2
0004f7 9190 00fb 	LDS  R25,_rapidez2+3
0004f9 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __ANEGW1:
0004fa 95f1      	NEG  R31
0004fb 95e1      	NEG  R30
0004fc 40f0      	SBCI R31,0
0004fd 9508      	RET
                 
                 __ANEGD1:
0004fe 95f0      	COM  R31
0004ff 9560      	COM  R22
000500 9570      	COM  R23
000501 95e1      	NEG  R30
000502 4fff      	SBCI R31,-1
000503 4f6f      	SBCI R22,-1
000504 4f7f      	SBCI R23,-1
000505 9508      	RET
                 
                 __MULW12U:
000506 9ffa      	MUL  R31,R26
000507 2df0      	MOV  R31,R0
000508 9feb      	MUL  R30,R27
000509 0df0      	ADD  R31,R0
00050a 9fea      	MUL  R30,R26
00050b 2de0      	MOV  R30,R0
00050c 0df1      	ADD  R31,R1
00050d 9508      	RET
                 
                 __MULB1W2U:
00050e 2f6e      	MOV  R22,R30
00050f 9f6a      	MUL  R22,R26
000510 01f0      	MOVW R30,R0
000511 9f6b      	MUL  R22,R27
000512 0df0      	ADD  R31,R0
000513 9508      	RET
                 
                 __MULW12:
000514 d02f      	RCALL __CHKSIGNW
000515 dff0      	RCALL __MULW12U
000516 f40e      	BRTC __MULW121
000517 dfe2      	RCALL __ANEGW1
                 __MULW121:
000518 9508      	RET
                 
                 __DIVW21U:
000519 2400      	CLR  R0
00051a 2411      	CLR  R1
00051b e190      	LDI  R25,16
                 __DIVW21U1:
00051c 0faa      	LSL  R26
00051d 1fbb      	ROL  R27
00051e 1c00      	ROL  R0
00051f 1c11      	ROL  R1
000520 1a0e      	SUB  R0,R30
000521 0a1f      	SBC  R1,R31
000522 f418      	BRCC __DIVW21U2
000523 0e0e      	ADD  R0,R30
000524 1e1f      	ADC  R1,R31
000525 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000526 60a1      	SBR  R26,1
                 __DIVW21U3:
000527 959a      	DEC  R25
000528 f799      	BRNE __DIVW21U1
000529 01fd      	MOVW R30,R26
00052a 01d0      	MOVW R26,R0
00052b 9508      	RET
                 
                 __MODW21:
00052c 94e8      	CLT
00052d ffb7      	SBRS R27,7
00052e c004      	RJMP __MODW211
00052f 95b1      	NEG  R27
000530 95a1      	NEG  R26
000531 40b0      	SBCI R27,0
000532 9468      	SET
                 __MODW211:
000533 fdf7      	SBRC R31,7
000534 dfc5      	RCALL __ANEGW1
000535 dfe3      	RCALL __DIVW21U
000536 01fd      	MOVW R30,R26
000537 f40e      	BRTC __MODW212
000538 dfc1      	RCALL __ANEGW1
                 __MODW212:
000539 9508      	RET
                 
                 __MANDW12:
00053a 94e8      	CLT
00053b fff7      	SBRS R31,7
00053c c002      	RJMP __MANDW121
00053d dfbc      	RCALL __ANEGW1
00053e 9468      	SET
                 __MANDW121:
00053f 23ea      	AND  R30,R26
000540 23fb      	AND  R31,R27
000541 f40e      	BRTC __MANDW122
000542 dfb7      	RCALL __ANEGW1
                 __MANDW122:
000543 9508      	RET
                 
                 __CHKSIGNW:
000544 94e8      	CLT
000545 fff7      	SBRS R31,7
000546 c002      	RJMP __CHKSW1
000547 dfb2      	RCALL __ANEGW1
000548 9468      	SET
                 __CHKSW1:
000549 ffb7      	SBRS R27,7
00054a c006      	RJMP __CHKSW2
00054b 95b1      	NEG  R27
00054c 95a1      	NEG  R26
00054d 40b0      	SBCI R27,0
00054e f800      	BLD  R0,0
00054f 9403      	INC  R0
000550 fa00      	BST  R0,0
                 __CHKSW2:
000551 9508      	RET
                 
                 __EEPROMRDW:
000552 9611      	ADIW R26,1
000553 d002      	RCALL __EEPROMRDB
000554 2ffe      	MOV  R31,R30
000555 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000556 99e1      	SBIC EECR,EEWE
000557 cffe      	RJMP __EEPROMRDB
000558 93ff      	PUSH R31
000559 b7ff      	IN   R31,SREG
00055a 94f8      	CLI
00055b bbae      	OUT  EEARL,R26
00055c bbbf      	OUT  EEARH,R27
00055d 9ae0      	SBI  EECR,EERE
00055e b3ed      	IN   R30,EEDR
00055f bfff      	OUT  SREG,R31
000560 91ff      	POP  R31
000561 9508      	RET
                 
                 __EEPROMWRW:
000562 d007      	RCALL __EEPROMWRB
000563 9611      	ADIW R26,1
000564 93ef      	PUSH R30
000565 2fef      	MOV  R30,R31
000566 d003      	RCALL __EEPROMWRB
000567 91ef      	POP  R30
000568 9711      	SBIW R26,1
000569 9508      	RET
                 
                 __EEPROMWRB:
00056a 9be1      	SBIS EECR,EEWE
00056b c002      	RJMP __EEPROMWRB1
00056c 95a8      	WDR
00056d cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00056e b79f      	IN   R25,SREG
00056f 94f8      	CLI
000570 bbae      	OUT  EEARL,R26
000571 bbbf      	OUT  EEARH,R27
000572 9ae0      	SBI  EECR,EERE
000573 b38d      	IN   R24,EEDR
000574 17e8      	CP   R30,R24
000575 f019      	BREQ __EEPROMWRB0
000576 bbed      	OUT  EEDR,R30
000577 9ae2      	SBI  EECR,EEMWE
000578 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000579 bf9f      	OUT  SREG,R25
00057a 9508      	RET
                 
                 __ROUND_REPACK:
00057b 2355      	TST  R21
00057c f442      	BRPL __REPACK
00057d 3850      	CPI  R21,0x80
00057e f411      	BRNE __ROUND_REPACK0
00057f ffe0      	SBRS R30,0
000580 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000581 9631      	ADIW R30,1
000582 1f69      	ADC  R22,R25
000583 1f79      	ADC  R23,R25
000584 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000585 e850      	LDI  R21,0x80
000586 2757      	EOR  R21,R23
000587 f411      	BRNE __REPACK0
000588 935f      	PUSH R21
000589 c073      	RJMP __ZERORES
                 __REPACK0:
00058a 3f5f      	CPI  R21,0xFF
00058b f031      	BREQ __REPACK1
00058c 0f66      	LSL  R22
00058d 0c00      	LSL  R0
00058e 9557      	ROR  R21
00058f 9567      	ROR  R22
000590 2f75      	MOV  R23,R21
000591 9508      	RET
                 __REPACK1:
000592 935f      	PUSH R21
000593 2000      	TST  R0
000594 f00a      	BRMI __REPACK2
000595 c072      	RJMP __MAXRES
                 __REPACK2:
000596 c06b      	RJMP __MINRES
                 
                 __UNPACK:
000597 e850      	LDI  R21,0x80
000598 2e19      	MOV  R1,R25
000599 2215      	AND  R1,R21
00059a 0f88      	LSL  R24
00059b 1f99      	ROL  R25
00059c 2795      	EOR  R25,R21
00059d 0f55      	LSL  R21
00059e 9587      	ROR  R24
                 
                 __UNPACK1:
00059f e850      	LDI  R21,0x80
0005a0 2e07      	MOV  R0,R23
0005a1 2205      	AND  R0,R21
0005a2 0f66      	LSL  R22
0005a3 1f77      	ROL  R23
0005a4 2775      	EOR  R23,R21
0005a5 0f55      	LSL  R21
0005a6 9567      	ROR  R22
0005a7 9508      	RET
                 
                 __CFD1U:
0005a8 9468      	SET
0005a9 c001      	RJMP __CFD1U0
                 __CFD1:
0005aa 94e8      	CLT
                 __CFD1U0:
0005ab 935f      	PUSH R21
0005ac dff2      	RCALL __UNPACK1
0005ad 3870      	CPI  R23,0x80
0005ae f018      	BRLO __CFD10
0005af 3f7f      	CPI  R23,0xFF
0005b0 f408      	BRCC __CFD10
0005b1 c04b      	RJMP __ZERORES
                 __CFD10:
0005b2 e156      	LDI  R21,22
0005b3 1b57      	SUB  R21,R23
0005b4 f4aa      	BRPL __CFD11
0005b5 9551      	NEG  R21
0005b6 3058      	CPI  R21,8
0005b7 f40e      	BRTC __CFD19
0005b8 3059      	CPI  R21,9
                 __CFD19:
0005b9 f030      	BRLO __CFD17
0005ba efef      	SER  R30
0005bb efff      	SER  R31
0005bc ef6f      	SER  R22
0005bd e77f      	LDI  R23,0x7F
0005be f977      	BLD  R23,7
0005bf c01a      	RJMP __CFD15
                 __CFD17:
0005c0 2777      	CLR  R23
0005c1 2355      	TST  R21
0005c2 f0b9      	BREQ __CFD15
                 __CFD18:
0005c3 0fee      	LSL  R30
0005c4 1fff      	ROL  R31
0005c5 1f66      	ROL  R22
0005c6 1f77      	ROL  R23
0005c7 955a      	DEC  R21
0005c8 f7d1      	BRNE __CFD18
0005c9 c010      	RJMP __CFD15
                 __CFD11:
0005ca 2777      	CLR  R23
                 __CFD12:
0005cb 3058      	CPI  R21,8
0005cc f028      	BRLO __CFD13
0005cd 2fef      	MOV  R30,R31
0005ce 2ff6      	MOV  R31,R22
0005cf 2f67      	MOV  R22,R23
0005d0 5058      	SUBI R21,8
0005d1 cff9      	RJMP __CFD12
                 __CFD13:
0005d2 2355      	TST  R21
0005d3 f031      	BREQ __CFD15
                 __CFD14:
0005d4 9576      	LSR  R23
0005d5 9567      	ROR  R22
0005d6 95f7      	ROR  R31
0005d7 95e7      	ROR  R30
0005d8 955a      	DEC  R21
0005d9 f7d1      	BRNE __CFD14
                 __CFD15:
0005da 2000      	TST  R0
0005db f40a      	BRPL __CFD16
0005dc df21      	RCALL __ANEGD1
                 __CFD16:
0005dd 915f      	POP  R21
0005de 9508      	RET
                 
                 __CDF1U:
0005df 9468      	SET
0005e0 c001      	RJMP __CDF1U0
                 __CDF1:
0005e1 94e8      	CLT
                 __CDF1U0:
0005e2 9730      	SBIW R30,0
0005e3 4060      	SBCI R22,0
0005e4 4070      	SBCI R23,0
0005e5 f0b1      	BREQ __CDF10
0005e6 2400      	CLR  R0
0005e7 f026      	BRTS __CDF11
0005e8 2377      	TST  R23
0005e9 f412      	BRPL __CDF11
0005ea 9400      	COM  R0
0005eb df12      	RCALL __ANEGD1
                 __CDF11:
0005ec 2e17      	MOV  R1,R23
0005ed e17e      	LDI  R23,30
0005ee 2011      	TST  R1
                 __CDF12:
0005ef f032      	BRMI __CDF13
0005f0 957a      	DEC  R23
0005f1 0fee      	LSL  R30
0005f2 1fff      	ROL  R31
0005f3 1f66      	ROL  R22
0005f4 1c11      	ROL  R1
0005f5 cff9      	RJMP __CDF12
                 __CDF13:
0005f6 2fef      	MOV  R30,R31
0005f7 2ff6      	MOV  R31,R22
0005f8 2d61      	MOV  R22,R1
0005f9 935f      	PUSH R21
0005fa df8a      	RCALL __REPACK
0005fb 915f      	POP  R21
                 __CDF10:
0005fc 9508      	RET
                 
                 __ZERORES:
0005fd 27ee      	CLR  R30
0005fe 27ff      	CLR  R31
0005ff 01bf      	MOVW R22,R30
000600 915f      	POP  R21
000601 9508      	RET
                 
                 __MINRES:
000602 efef      	SER  R30
000603 efff      	SER  R31
000604 e76f      	LDI  R22,0x7F
000605 ef7f      	SER  R23
000606 915f      	POP  R21
000607 9508      	RET
                 
                 __MAXRES:
000608 efef      	SER  R30
000609 efff      	SER  R31
00060a e76f      	LDI  R22,0x7F
00060b e77f      	LDI  R23,0x7F
00060c 915f      	POP  R21
00060d 9508      	RET
                 
                 __MULF12:
00060e 935f      	PUSH R21
00060f df87      	RCALL __UNPACK
000610 3870      	CPI  R23,0x80
000611 f359      	BREQ __ZERORES
000612 3890      	CPI  R25,0x80
000613 f349      	BREQ __ZERORES
000614 2401      	EOR  R0,R1
000615 9408      	SEC
000616 1f79      	ADC  R23,R25
000617 f423      	BRVC __MULF124
000618 f324      	BRLT __ZERORES
                 __MULF125:
000619 2000      	TST  R0
00061a f33a      	BRMI __MINRES
00061b cfec      	RJMP __MAXRES
                 __MULF124:
00061c 920f      	PUSH R0
00061d 931f      	PUSH R17
00061e 932f      	PUSH R18
00061f 933f      	PUSH R19
000620 934f      	PUSH R20
000621 2711      	CLR  R17
000622 2722      	CLR  R18
000623 2799      	CLR  R25
000624 9f68      	MUL  R22,R24
000625 01a0      	MOVW R20,R0
000626 9f8f      	MUL  R24,R31
000627 2d30      	MOV  R19,R0
000628 0d41      	ADD  R20,R1
000629 1f59      	ADC  R21,R25
00062a 9f6b      	MUL  R22,R27
00062b 0d30      	ADD  R19,R0
00062c 1d41      	ADC  R20,R1
00062d 1f59      	ADC  R21,R25
00062e 9f8e      	MUL  R24,R30
00062f d027      	RCALL __MULF126
000630 9fbf      	MUL  R27,R31
000631 d025      	RCALL __MULF126
000632 9f6a      	MUL  R22,R26
000633 d023      	RCALL __MULF126
000634 9fbe      	MUL  R27,R30
000635 d01d      	RCALL __MULF127
000636 9faf      	MUL  R26,R31
000637 d01b      	RCALL __MULF127
000638 9fae      	MUL  R26,R30
000639 0d11      	ADD  R17,R1
00063a 1f29      	ADC  R18,R25
00063b 1f39      	ADC  R19,R25
00063c 1f49      	ADC  R20,R25
00063d 1f59      	ADC  R21,R25
00063e 2fe3      	MOV  R30,R19
00063f 2ff4      	MOV  R31,R20
000640 2f65      	MOV  R22,R21
000641 2f52      	MOV  R21,R18
000642 914f      	POP  R20
000643 913f      	POP  R19
000644 912f      	POP  R18
000645 911f      	POP  R17
000646 900f      	POP  R0
000647 2366      	TST  R22
000648 f02a      	BRMI __MULF122
000649 0f55      	LSL  R21
00064a 1fee      	ROL  R30
00064b 1fff      	ROL  R31
00064c 1f66      	ROL  R22
00064d c002      	RJMP __MULF123
                 __MULF122:
00064e 9573      	INC  R23
00064f f24b      	BRVS __MULF125
                 __MULF123:
000650 df2a      	RCALL __ROUND_REPACK
000651 915f      	POP  R21
000652 9508      	RET
                 
                 __MULF127:
000653 0d10      	ADD  R17,R0
000654 1d21      	ADC  R18,R1
000655 1f39      	ADC  R19,R25
000656 c002      	RJMP __MULF128
                 __MULF126:
000657 0d20      	ADD  R18,R0
000658 1d31      	ADC  R19,R1
                 __MULF128:
000659 1f49      	ADC  R20,R25
00065a 1f59      	ADC  R21,R25
00065b 9508      	RET
                 
                 __DIVF21:
00065c 935f      	PUSH R21
00065d df39      	RCALL __UNPACK
00065e 3870      	CPI  R23,0x80
00065f f421      	BRNE __DIVF210
000660 2011      	TST  R1
                 __DIVF211:
000661 f40a      	BRPL __DIVF219
000662 cf9f      	RJMP __MINRES
                 __DIVF219:
000663 cfa4      	RJMP __MAXRES
                 __DIVF210:
000664 3890      	CPI  R25,0x80
000665 f409      	BRNE __DIVF218
                 __DIVF217:
000666 cf96      	RJMP __ZERORES
                 __DIVF218:
000667 2401      	EOR  R0,R1
000668 9408      	SEC
000669 0b97      	SBC  R25,R23
00066a f41b      	BRVC __DIVF216
00066b f3d4      	BRLT __DIVF217
00066c 2000      	TST  R0
00066d cff3      	RJMP __DIVF211
                 __DIVF216:
00066e 2f79      	MOV  R23,R25
00066f 931f      	PUSH R17
000670 932f      	PUSH R18
000671 933f      	PUSH R19
000672 934f      	PUSH R20
000673 2411      	CLR  R1
000674 2711      	CLR  R17
000675 2722      	CLR  R18
000676 2733      	CLR  R19
000677 01a9      	MOVW R20,R18
000678 e290      	LDI  R25,32
                 __DIVF212:
000679 17ae      	CP   R26,R30
00067a 07bf      	CPC  R27,R31
00067b 0786      	CPC  R24,R22
00067c 0741      	CPC  R20,R17
00067d f030      	BRLO __DIVF213
00067e 1bae      	SUB  R26,R30
00067f 0bbf      	SBC  R27,R31
000680 0b86      	SBC  R24,R22
000681 0b41      	SBC  R20,R17
000682 9408      	SEC
000683 c001      	RJMP __DIVF214
                 __DIVF213:
000684 9488      	CLC
                 __DIVF214:
000685 1f55      	ROL  R21
000686 1f22      	ROL  R18
000687 1f33      	ROL  R19
000688 1c11      	ROL  R1
000689 1faa      	ROL  R26
00068a 1fbb      	ROL  R27
00068b 1f88      	ROL  R24
00068c 1f44      	ROL  R20
00068d 959a      	DEC  R25
00068e f751      	BRNE __DIVF212
00068f 01f9      	MOVW R30,R18
000690 2d61      	MOV  R22,R1
000691 914f      	POP  R20
000692 913f      	POP  R19
000693 912f      	POP  R18
000694 911f      	POP  R17
000695 2366      	TST  R22
000696 f032      	BRMI __DIVF215
000697 0f55      	LSL  R21
000698 1fee      	ROL  R30
000699 1fff      	ROL  R31
00069a 1f66      	ROL  R22
00069b 957a      	DEC  R23
00069c f24b      	BRVS __DIVF217
                 __DIVF215:
00069d dedd      	RCALL __ROUND_REPACK
00069e 915f      	POP  R21
00069f 9508      	RET
                 
                 _delay_ms:
0006a0 9610      	adiw r26,0
0006a1 f039      	breq __delay_ms1
                 __delay_ms0:
0006a2 95a8      	wdr
                +
0006a3 ef8a     +LDI R24 , LOW ( 0xFA )
0006a4 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0006a5 9701     +SBIW R24 , 1
0006a6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0006a7 9711      	sbiw r26,1
0006a8 f7c9      	brne __delay_ms0
                 __delay_ms1:
0006a9 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8535 register use summary:
r0 :  35 r1 :  23 r2 :   0 r3 :   0 r4 :  10 r5 :   0 r6 :   5 r7 :   3 
r8 :   5 r9 :   3 r10:   5 r11:   3 r12:   5 r13:   3 r14:   0 r15:   0 
r16:   0 r17:  10 r18:  13 r19:  12 r20:  14 r21:  48 r22:  53 r23:  44 
r24:  23 r25:  32 r26: 109 r27:  56 r28:   1 r29:   1 r30: 299 r31: 131 
x  :  11 y  :  14 z  :   9 
Registers used: 29 out of 35 (82.9%)

ATmega8535 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  18 add   :  12 
adiw  :  16 and   :   4 andi  :   1 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  17 
brge  :  19 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   4 
brlt  :  23 brmi  :   8 brne  :  95 brpl  :  10 brsh  :   0 brtc  :   4 
brts  :   1 brvc  :   2 brvs  :   3 bset  :   0 bst   :   1 cbi   :  29 
cbr   :   0 clc   :   1 clh   :   0 cli   :   3 cln   :   0 clr   :  28 
cls   :   0 clt   :   5 clv   :   0 clz   :   0 com   :   4 cp    :   8 
cpc   :  17 cpi   :  19 cpse  :   0 dec   :   7 des   :   0 eor   :   5 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :  10 
inc   :   2 ld    :  13 ldd   :   0 ldi   : 188 lds   :  38 lpm   :   7 
lsl   :  11 lsr   :   1 mov   :  24 movw  :  36 mul   :  14 muls  :   0 
mulsu :   0 neg   :   8 nop   :   0 or    :   0 ori   :   4 out   :  58 
pop   :  18 push  :  17 rcall : 336 ret   :  75 reti  :   1 rjmp  : 118 
rol   :  25 ror   :   7 sbc   :   6 sbci  :   9 sbi   :  10 sbic  :   1 
sbis  :   1 sbiw  :  51 sbr   :   1 sbrc  :   1 sbrs  :   5 sec   :   3 
seh   :   0 sei   :   1 sen   :   0 ser   :   8 ses   :   0 set   :   5 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  14 std   :   0 
sts   :  58 sub   :   3 subi  :   2 swap  :   0 tst   :  18 wdr   :   2 

Instructions used: 71 out of 114 (62.3%)

ATmega8535 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000d54   3348     64   3412    8192  41.7%
[.dseg] 0x000060 0x00011f      0     63     63     512  12.3%
[.eseg] 0x000000 0x000006      0      6      6     512   1.2%

Assembly complete, 0 errors, 10 warnings
